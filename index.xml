<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title></title>
        <link>https://colinder.github.io/</link>
        <description>Hello New World</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 11 Oct 2020 21:47:43 &#43;0900</lastBuildDate>
            <atom:link href="https://colinder.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>ÎèôÍ∏∞ &amp; ÎπÑÎèôÍ∏∞ &amp; CallBackÌï®Ïàò</title>
    <link>https://colinder.github.io/syncasynccallback/</link>
    <pubDate>Sun, 11 Oct 2020 21:47:43 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/syncasynccallback/</guid>
    <description><![CDATA[‚Äã
ÎèôÍ∏∞(Synchronous)ÎûÄ? Ïñ¥Îñ§ ÏûëÏóÖÏùÑ Ïã§ÌñâÌñàÏùÑ Îïå, Í∑∏ ÏûëÏóÖÏù¥ ÎÅùÎÇòÍ≥† Í≤∞Í≥ºÎ•º ÏùëÎãµÎ∞õÏùÄ Îí§Ïóê Îã§Ïùå Ìï®ÏàòÎ•º Ïã§ÌñâÌïòÎäî Î∞©Ïãù.
ÎßåÏïΩ ÏùëÎãµÍ∞íÏù¥ ÏóÜÎã§Î©¥, Î¨¥ÌïúÏ†ï Í∏∞Îã§Î¶∞Îã§. Ï¶â, ÏùëÎãµÏù¥ ÏôÄÏïº Îã§Ïùå Ïã§ÌñâÏù¥ ÎêòÎäî Î∞©Ïãù
ex) AÏã§Ìñâ üëâ AÏùò Í≤∞Í≥ºÍ∞í return ÌôïÏù∏ üëâ BÏã§Ìñâ
 ‚Äã
ÎπÑÎèôÍ∏∞(Asynchronous)ÎûÄ? Ïñ¥Îñ§ ÏûëÏóÖÏùÑ Ïã§ÌñâÌïú ÌõÑ Í≤∞Í≥ºÍ∞íÏùÑ Í∏∞Îã§Î¶¨ÏßÄ ÏïäÍ≥†, Î∞îÎ°ú Îã§Ïùå Ìï®ÏàòÎ•º Ïã§Ìñâ.
ex) AÏã§Ìñâ üëâ BÏã§Ìñâ üëâ &hellip;
 ‚Äã
CallBackÌï®ÏàòÎûÄ? ÎπÑÎèôÍ∏∞ Ï≤òÎ¶¨Í≤∞Í≥ºÎ°ú Î∞òÌôòÎêòÎäî CallbackÌï®Ïàò
CallbackÌï®ÏàòÎäî ÌäπÏ†ïÌï®ÏàòÏóê Îß§Í∞úÎ≥ÄÏàòÎ°ú Ï†ÑÎã¨Îêú Ìï®ÏàòÎ•º ÏùòÎØ∏ÌïúÎã§.]]></description>
</item><item>
    <title>AJAX(axios) ÏöîÏ≤≠</title>
    <link>https://colinder.github.io/axios/</link>
    <pubDate>Sun, 11 Oct 2020 21:25:51 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/axios/</guid>
    <description><![CDATA[‚Äã
AJAX  ÏÑ∏ÏÉÅÏóêÎäî Îã§ÏñëÌïú webÏÑúÎ≤ÑÍ∞Ä ÏûàÎã§.
Í∑∏Î¶¨Í≥† Î™®Îì† webÏùÄ &ldquo;ÏöîÏ≤≠&rdquo;Í≥º &ldquo;ÏùëÎãµ&rdquo;ÏúºÎ°ú ÌÜµÏã†ÌïúÎã§. ÏòàÎ•º Îì§Ïñ¥..
 ÏöîÏ≤≠: &ldquo;Ïù¥ÎØ∏ÏßÄÎ•º Î≥¥Ïó¨Ï§ò&rdquo;
ÏùëÎãµ: &ldquo;Ïò§ÌÇ§&rdquo; or &ldquo;Ïã´Ïñ¥&rdquo;
 Í∑∏Î†áÎã§Î©¥, Ïù¥ webÏÑúÎ≤ÑÎì§Í≥º ÌÜµÏã† ÌïòÎ†§Î©¥ Ïñ¥ÎñªÍ≤å Ìï¥Ïïº Ìï†Íπå?
  ÎåÄÌëúÏ†ÅÏù∏ ÌÜµÏã† Î∞©Î≤ïÏùÑ AJAXÎùº ÌïúÎã§. Ïù¥Îäî JavaScriptÏùò ÎùºÏù¥Î∏åÎü¨Î¶¨Ï§ë ÌïòÎÇòÏù¥Î©∞ Asynchronous Javascript And Xml(ÎπÑÎèôÍ∏∞Ïãù ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏ÏôÄ xml)Ïùò ÏïΩÏûêÎ©∞, ÏûêÏ≤¥Í∞Ä ÌïòÎÇòÏùò ÌäπÏ†ïÌïú Í∏∞Ïà†ÏùÑ ÎßêÌïòÎäî Í≤ÉÏù¥ ÏïÑÎãàÎ©∞, Ìï®Íªò ÏÇ¨Ïö©ÌïòÎäî Í∏∞Ïà†Ïùò Î¨∂ÏùåÏùÑ ÏßÄÏπ≠ÌïòÎäî Ïö©Ïñ¥Ïù¥Îã§.
Î∏åÎùºÏö∞Ï†ÄÍ∞Ä Í∞ÄÏßÄÍ≥†ÏûàÎäî XMLHttpRequest Í∞ùÏ≤¥Î•º Ïù¥Ïö©Ìï¥ÏÑú Ï†ÑÏ≤¥ ÌéòÏù¥ÏßÄÎ•º ÏÉàÎ°ú Í≥†ÏπòÏßÄ ÏïäÍ≥†ÎèÑ ÌéòÏù¥ÏßÄÏùò ÏùºÎ∂ÄÎßåÏùÑ ÏúÑÌïú Îç∞Ïù¥ÌÑ∞Î•º Î°úÎìúÌïòÎäî Í∏∞Î≤ï Ïù¥Î©∞ AjaxÎ•º ÌïúÎßàÎîîÎ°ú Ï†ïÏùòÌïòÏûêÎ©¥ JavaScriptÎ•º ÏÇ¨Ïö©Ìïú ÎπÑÎèôÍ∏∞ ÌÜµÏã†, ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏôÄ ÏÑúÎ≤ÑÍ∞ÑÏóê XML Îç∞Ïù¥ÌÑ∞Î•º Ï£ºÍ≥†Î∞õÎäî Í∏∞Ïà†Ïù¥ÎùºÍ≥† Ìï† Ïàò ÏûàÍ≤†ÏäµÎãàÎã§.]]></description>
</item><item>
    <title>Git_mirroring</title>
    <link>https://colinder.github.io/git_mirroring/</link>
    <pubDate>Thu, 08 Oct 2020 22:08:37 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/git_mirroring/</guid>
    <description><![CDATA[‚Äã
Git_mirroring  Í∏∞Ï°¥Ïóê ÏÇ¨Ïö©ÌïòÍ≥† ÏûàÎçò A_RepoÏóêÏÑú B_RepoÎ°ú Ïª§Î∞ãÌûàÏä§ÌÜ†Î¶¨ Í∑∏ÎåÄÎ°ú Î≥µÏÇ¨Í∞Ä ÌïÑÏöîÌï† ÎïåÍ∞Ä ÏûàÏäµÎãàÎã§.
Ïó¨Í∏∞ÏÑú A_RepoÎ•º Í∑∏ÎåÄÎ°ú Í∞ÄÏ†∏Ïò®Îã§Îäî ÏùòÎØ∏Îäî Îã®ÏßÄ ÌååÏùºÏùÑ ÏÉàÎ°≠Í≤å ÎßåÎìúÎäî Í≤ÉÏù¥ ÏïÑÎãàÎùº A_RepoÏóêÏÑú ÏûëÏóÖÌïòÎçò commit Ïù¥Î†• Î™®ÎëêÎ•º Í∑∏ÎåÄÎ°ú Ïù¥Ï†ÑÌïòÎäî ÏùòÎØ∏Î•º ÎúªÌï©ÎãàÎã§.
 ‚Äã
  ÌÑ∞ÎØ∏ÎÑêÏùÑ ÏóΩÎãàÎã§.
  Î≥µÏÇ¨ÌïòÍ≥†Ïûê ÌïòÎäî Ï†ÄÏû•ÏÜå(A_Repo)Ïùò bare cloneÏùÑ ÏÉùÏÑ±Ìï©ÎãàÎã§.
1  git clone --bare https://github.com/user/old-repository.git     ÏÉàÎ°úÏö¥ Ï†ÄÏû•ÏÜå(B_Repo)Î•º ÎßåÎì§Í≥† mirror-pushÎ•º ÏßÑÌñâÌï©ÎãàÎã§.
1 2  cd old-repository.git	üëà ÏúÑÏóêÏÑú ÌÅ¥Î°†(bare)Ìïú Ìè¥ÎçîÎ°ú Ïù¥Îèô git push --mirror https://github.]]></description>
</item><item>
    <title>SW Expert Academy_D3 3975, 5176, , </title>
    <link>https://colinder.github.io/sw_20.09.26/</link>
    <pubDate>Sat, 26 Sep 2020 00:07:40 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.26/</guid>
    <description><![CDATA[‚Äã
D3_3975_ÏäπÎ•† ÎπÑÍµêÌïòÍ∏∞ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  result = [] for T in range(int(input())): A, B, C, D = map(int, input().split()) if B/A &gt; D/C: result.append(&#34;BOB&#34;) elif B/A &lt; D/C: result.append(&#34;ALICE&#34;) else: result.append(&#34;DRAW&#34;) for t in range(T+1): print(f&#34;#{t+1} {result[t]}&#34;) # ÏïÑÎãà Ïù¥Í≤å D3ÎùºÍ≥†? ÏôÑÏ†Ñ ÎÇúÏù¥ÎèÑ ÏÑ§Ï†ï Ïã§ÏàòÎÑ§. ÌñàÎã§Í∞Ä Îü∞ÌÉÄÏûÑ Ïò§Î•ò Î≥¥Í≥† # Ïôú Í∑∏Îü∞Í±¥ÏßÄ ÏïåÏïòÎã§. # pythonÏùÄ Í≤∞Í≥ºÎ•º Î™®ÏïòÎã§Í∞Ä Ï∂úÎ†•ÌïòÎäî Í≤å Îçî Îπ†Î•¥Îã§.]]></description>
</item><item>
    <title>REST API Reference</title>
    <link>https://colinder.github.io/rest-api-reference/</link>
    <pubDate>Thu, 24 Sep 2020 09:54:40 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/rest-api-reference/</guid>
    <description><![CDATA[‚Äã
REST API Reference [TOC]
1.ÏÇ¨Ïö©Ïûê API    Members Descriptions     POST /accounts/signup ÌöåÏõêÍ∞ÄÏûÖ   POST /accounts/login ÌöåÏõê Î°úÍ∑∏Ïù∏   POST /accounts/userDetail ÌöåÏõêÏ†ïÎ≥¥   PUT /accounts/update ÌöåÏõêÏ†ïÎ≥¥ ÏàòÏ†ï   DELETE /accounts/dropUser ÌöåÏõêÌÉàÌá¥   GET /accounts/emailAuth Ïù¥Î©îÏùº Ïù∏Ï¶ù   GET /accounts/emailCheck Ïù¥Î©îÏùº Ï§ëÎ≥µ ÌôïÏù∏   GET /accounts/nicknameCheck ÎãâÎÑ§ÏûÑ Ï§ëÎ≥µ ÌôïÏù∏    1.1 ÌöåÏõê Î°úÍ∑∏Ïù∏ POST /accounts/login ‚Äã	ÌöåÏõê Î°úÍ∑∏Ïù∏ API ÏûÖÎãàÎã§.]]></description>
</item><item>
    <title>SW Expert Academy_D3 3307, 3304, 4371, 10726</title>
    <link>https://colinder.github.io/sw_20.09.21/</link>
    <pubDate>Mon, 21 Sep 2020 22:43:28 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.21/</guid>
    <description><![CDATA[‚Äã
D3_3307_ÏµúÏû• Ï¶ùÍ∞Ä Î∂ÄÎ∂Ñ ÏàòÏó¥(LIS) 1 2 3 4 5 6 7 8 9 10 11 12 13 14  for T in range(int(input())): N = int(input()) arr = list(map(int, input().split())) dp= [1] * N for i in range(1, N): for j in range(i): if arr[j] &lt; arr[i]: dp[i]= max(dp[i], dp[j] + 1) print(f&#39;#{T+1} {max(dp)}&#39;) # dpÎäî Ïâ¨Ïö¥ÎìØ Ïñ¥Î†µÍ≥† Ïñ¥Î†§Ïö¥ÎìØ ÏâΩÎã§... # LISÎ°ú Í≤ÄÏÉâÌïòÎ©¥ ÎèÑÏõÄÏù¥ ÎêòÎäî Í∏ÄÏù¥ ÎßéÎã§.    ‚Äã]]></description>
</item><item>
    <title>SW Expert Academy_D3 3131, 3233, 1860, 4047</title>
    <link>https://colinder.github.io/sw_20.09.15/</link>
    <pubDate>Sat, 19 Sep 2020 22:52:51 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.15/</guid>
    <description><![CDATA[‚Äã
D3_3131_100Îßå Ïù¥ÌïòÏùò Î™®Îì† ÏÜåÏàò 1 2 3 4 5 6 7 8 9 10 11 12  a = [0, 0] + [1] * 1000000 for i in range(2, 1000000): if a[i] == 1: for j in range(2*i, 1000001, i): a[j] = 0 for i in range(2, 1000000): if a[i] == 1: print(i, end=&#34; &#34;) # ÏóêÎùºÌÜ†Ïä§ÌÖåÎÑ§Ïä§Ïùò Ï≤¥   ‚Äã
D3_3233_Ï†ïÏÇºÍ∞ÅÌòï Î∂ÑÌï† ÎÜÄÏù¥ 1 2 3 4 5 6 7 8 9 10  for T in range(int(input())): A, B = map(int, input().]]></description>
</item><item>
    <title>block_chain private Vs public / blockchain Vs network</title>
    <link>https://colinder.github.io/private-vs-public-blockchain-vs-network/</link>
    <pubDate>Thu, 17 Sep 2020 15:04:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/private-vs-public-blockchain-vs-network/</guid>
    <description><![CDATA[‚Äã
üßîÌîÑÎùºÏù¥Îπó Î∏îÎ°ùÏ≤¥Ïù∏ VS üë®üèª‚Äçü§ù‚Äçüë®üèªÌçºÎ∏îÎ¶≠ Î∏îÎ°ùÏ≤¥Ïù∏ VS üîíÌîÑÎùºÏù¥Îπó ÎÑ§Ìä∏ÏõåÌÅ¨ VS üîêÌçºÎ∏îÎ¶≠ ÎÑ§Ìä∏ÏõåÌÅ¨   Why Ïù¥Îü∞ ÏßàÎ¨∏ÏùÑ?
 Î∏îÎ°ùÏ≤¥Ïù∏ Í¥ÄÎ†® Ï†ïÎ≥¥Î•º Íµ¨Í∏ÄÎßÅÌïòÎã§Î≥¥Î©¥, ÌîÑÎùºÏù¥Îπó ÎÑ§Ìä∏ÏõåÌÅ¨, ÌçºÎ∏îÎ¶≠ ÎÑ§Ìä∏ÏõåÌÅ¨, ÌîÑÎùºÏù¥Îπó Î∏îÎ°ùÏ≤¥Ïù∏, ÌçºÎ∏îÎ¶≠ Î∏îÎ°ùÏ≤¥Ïù∏. Ïù¥ 4Í∞ÄÏßÄÏùò ÎßêÏùÑ ÌòºÏö©Ìï¥ÏÑú ÏÇ¨Ïö©ÌïòÍ≥† ÏûàÎäî Í≤ÉÏùÑ ÏâΩÍ≤å Î≥º Ïàò ÏûàÎã§. Ïó¨Í∏∞ÏÑú
ÌîÑÎùºÏù¥Îπó ÎÑ§Ìä∏ÏõåÌÅ¨ÏôÄ ÌîÑÎùºÏù¥Îπó Î∏îÎ°ùÏ≤¥Ïù∏Í≥º Í∞ôÏù¥ ÎÑ§Ìä∏ÏõåÌÅ¨ÏôÄ Î∏îÎ°ùÏ≤¥Ïù∏ÏùÑ Í∞ôÏùÄ ÏùòÎØ∏Î°ú ÎßéÏù¥ ÏÇ¨Ïö©ÌïòÎäîÎç∞. Í≥ºÏó∞ Ïù¥ ÎëòÏù¥ Í∞ôÏùÄ Í≤ÉÏùÑ ÏùòÎØ∏ÌïòÎäîÏßÄ ÏïåÏïÑÎ≥¥ÏïòÎã§.
 ‚Äã
Í≤∞Î°† - Î∏îÎ°ùÏ≤¥Ïù∏=&gt; ÏÇ¨Ïö©ÏûêÏùò Ï†ëÍ∑ºÏ°∞Í±¥ÏùÑ Í∏∞Ï§ÄÏúºÎ°ú ÌîÑÎùºÏù¥ÎπóÍ≥º ÌçºÎ∏îÎ¶≠ÏùÑ ÎÇòÎàî - ÎÑ§Ìä∏ÏõåÌÅ¨=&gt; ÏÑúÎπÑÏä§ Ïö¥Ïö©ÌòïÌÉúÎ•º Í∏∞Ï§ÄÏúºÎ°ú ÌîÑÎùºÏù¥ÎπóÍ≥º ÌçºÎ∏îÎ¶≠ÏùÑ ÎÇòÎàî ‚Äã]]></description>
</item><item>
    <title>Python_Library</title>
    <link>https://colinder.github.io/python_library/</link>
    <pubDate>Fri, 11 Sep 2020 22:39:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/python_library/</guid>
    <description><![CDATA[‚Äã
ÏûêÏ£º Ïì∞Îäî Python Library  ÏûêÏ£º ÏÇ¨Ïö©ÌïòÍ≤åÎêòÎäî ÌååÏù¥Ïç¨ ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Ï†ïÎ¶¨ÌïúÎã§.
 ‚Äã
  Ï†ïÍ∑úÌëúÌòÑÏãù  ÏùºÎåÄÏùº Îß§Ïπ≠ÎêòÎäî Î¨∏Ïûê
 Ï†ïÍ∑úÌëúÌòÑÏãù ÏïàÏóêÏÑú, Î∞îÎ°ú Îã§Ïùå Ï†àÏóêÏÑú ÏÑ§Î™ÖÌïòÎäî Î©îÌÉÄÎ¨∏ÏûêÎ•º Ï†úÏô∏Ìïú Î™®Îì† Î¨∏Ïûê ÌïòÎÇòÎäî ÏùºÎ∞ò Î¨∏ÏûêÏó¥ ÌïòÎÇòÏôÄ Îß§Ïπ≠ÎêúÎã§. ÏòàÎ•º Îì§Ïñ¥, aÎäî aÏôÄ Îß§Ïπ≠ÎêòÍ≥†, Í∞ÄÎäî ‚ÄòÍ∞Ä‚ÄôÏôÄ Îß§Ïπ≠ÎêòÎäî ÏãùÏù¥Îã§. ÎãπÏó∞Ìûà aÍ∞Ä ‚Äòb‚Äô ÎòêÎäî ‚ÄòÍ∞Ä‚ÄôÏôÄ Îß§Ïπ≠ÎêòÏßÄÎäî ÏïäÎäîÎã§.
1 2 3 4 5 6 7 8 9 10 11 12 13  Ïñ¥Îñ§ ÌîÑÎ°úÍ∑∏ÎûòÎ∞ç Ïñ∏Ïñ¥Ïùò Ï†ïÍ∑úÌëúÌòÑÏãùÏù¥Îì† Î©îÌÉÄÎ¨∏Ïûê(ÌäπÏàòÌïú Í∏∞Îä•ÏùÑ ÌïòÎäî Î¨∏Ïûê)ÎùºÎäî Í≤ÉÏù¥ Ï°¥Ïû¨ÌïúÎã§.]]></description>
</item><item>
    <title>SW Expert Academy_D3 4698, 1493, 10570, 3032</title>
    <link>https://colinder.github.io/sw_20.09.09/</link>
    <pubDate>Tue, 08 Sep 2020 23:13:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.09/</guid>
    <description><![CDATA[‚Äã
D3_4698_ÌÖåÎÑ§Ïä§Ïùò ÌäπÎ≥ÑÌïú ÏÜåÏàò 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  for T in range(int(input())): D, A, B = map(int, input().split()) D = str(D) a = [0, 0] + [1] * (B - 1) rootB = int(B**0.5)	üëà Ïù¥ ÏïÑÏù¥ÎîîÏñ¥Î•º ÏñªÍ∏∞ÍπåÏßÄ Ïò§ÎûúÏãúÍ∞ÑÏù¥ Í±∏Î†∏Îã§. for i in range(2, rootB+1):	üëà if a[i] == 1:	üëà for j in range(2*i, B+1, i):	üëà ÏóêÎùºÌÜ†Ïä§ÌÖåÎÑ§Ïä§Ïùò Ï≤¥ Î•º ÌôúÏö© a[j] = 0	üëà result = [] for i in range(A, B+1): if a[i] == 1 and D in str(i): result.]]></description>
</item></channel>
</rss>

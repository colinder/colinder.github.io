<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title></title>
        <link>https://colinder.github.io/</link>
        <description>Hello New World</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 23 Jun 2022 14:01:21 &#43;0900</lastBuildDate>
            <atom:link href="https://colinder.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>React-Native_icon_and_splash</title>
    <link>https://colinder.github.io/react-native_icon_and_splash/</link>
    <pubDate>Thu, 23 Jun 2022 14:01:21 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/react-native_icon_and_splash/</guid>
    <description><![CDATA[​
React-native (android)  icon 변경과 splash를 적용해보겠습니다.
 icon: 핸드폰에서 어플 접속시 보이는 모습을 의미.
splash: 어플 실행시 잠시 노출되는 화면을 의미.​
​
Icon 변경 방법  결론부터 정리하자면 특정 폴더안에 이미지만 넣으면 됩니다.
 ​
*프로젝트를 시작할 때 이름을 test로 만들어 진행하였습니다. (버전은 0.67)
1  $ npx react-native init test --version 0.67.0   ​
1. android/app/src/main/res 까지 폴더를 들어갑니다. 이미지와 같은 구조가 보인다면 잘 접근한 것입니다.]]></description>
</item><item>
    <title>Selenium 동작 대기 방법</title>
    <link>https://colinder.github.io/selenium_%EB%8F%99%EC%9E%91%EB%8C%80%EA%B8%B0/</link>
    <pubDate>Tue, 17 May 2022 15:50:42 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/selenium_%EB%8F%99%EC%9E%91%EB%8C%80%EA%B8%B0/</guid>
    <description><![CDATA[​
Selenium 동작대기 접근하려는 요소가 존재하지 않을 때 발생하는 NoSuchElementException error. 페이지와 서버가 통신중이거나 네트워크 지연 등으로 위의 크롤링을 원하는 요소가 html에 존재하기 전에 요소에 접근을 시도하기 때문에 발생하는 에러입니다.
어떤 멋진 코드로 이를 해결할 수 있을까? 고민하였지만 조금 무식한? 방법인 시간 지연으로 이를 해결하였습니다.
​
​
1. time.sleep  python 내장 library 지정한 시간만큼 지연 (프로세스 자체를 지정한 시간동안 기다림)  사용법 1 2 3  from time import sleep sleep(3) //3초간 기다림   ​]]></description>
</item><item>
    <title>How to Data_Scaling</title>
    <link>https://colinder.github.io/data_scaling/</link>
    <pubDate>Wed, 20 Apr 2022 17:19:29 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/data_scaling/</guid>
    <description><![CDATA[​
데이터 스케일링 (Data Scaling) 이란?  데이터의 값의 범위를 조정하는 것
 ​
​
​
🤔 왜 데이터 스케일링을 하는가?  데이터의 경향, feature의 영향, 상관관계 등 데이터를 분석하는데 활용할 수 있으며, 인공지능 개발 중 학습단계에서 여러 feature의 영향도를 비슷한 수준으로 맞추기 위해 범위를 조정.
 ​
아래 그림을 보면서 이해해보겠습니다.
과제  여러 feature(성별, 나이, 몸무게, 자산현황)의 특성을 보고 Label을 예측하는 모델을 만든다고 가정  문제점  값의 범위를 보면  성별 0, 1 나이 0~100, 몸무게 0~120, 자산현황 0~700,000,000, Label은 0~800,000,000의 값을 갖는다고 가정한다면,    ​]]></description>
</item><item>
    <title>Epoch</title>
    <link>https://colinder.github.io/epoch/</link>
    <pubDate>Fri, 18 Mar 2022 14:15:59 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/epoch/</guid>
    <description><![CDATA[​
Epoch의 의미 1~100의 데이터가 input의 양(x_train)으로 주어졌을 때
20 epoch를 적용한다는 의미는
단계별로 설명하자면,
  1번째 학습(1 epoch) 시작
  초기화된 가중치(w)와 편향(b)을 가지고 1에 대한 계산 진행 &gt;
  1을 대입하여 나온 가중치(w) 와 편향(b) 도출
  2에게 1을 대입하여 나온 가중치(w) 와 편향(b)을 대입하여 새로운 가중치(w)와 편향(b)가 도출
  3에게 2를 대입하여 나온 가중치(w) 와 편향(b)을 대입하여 새로운 가중치(w)와 편향(b)가 도출
  &hellip;]]></description>
</item><item>
    <title>what is optimizer</title>
    <link>https://colinder.github.io/what_is_optimizer/</link>
    <pubDate>Fri, 18 Mar 2022 14:13:56 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/what_is_optimizer/</guid>
    <description><![CDATA[​
​
​
옵티마이저의 목적  옵티마이저는 학습 데이터(Train data)셋을 이용하여 모델을 학습 할 때 데이터의 실제 결과와 모델이 예측한 결과를 기반으로 오차를 잘 줄일 수 있게 만들어주는 역할입니다.
 ​
따라서 최적화(Optimization)은 손실 함수(Loss Function)의 결과값을 최소화하는 모델의 파라미터(가중치)를 찾는 것을 의미합니다.
​
​
​
옵티마이저 리스트  경사 하강법(Gradient Descent) 확률적 경사 하강법(Stochastic Gradient Descent, SGD) Momentum Nesterov Accelerated Gradient (NAG) Adam AdaGrad RMSProp AdaMax Nadam  참고 https://keras.]]></description>
</item><item>
    <title>what is Linter?</title>
    <link>https://colinder.github.io/what_is_linter/</link>
    <pubDate>Fri, 18 Mar 2022 13:28:48 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/what_is_linter/</guid>
    <description><![CDATA[​
Linter란?  Linter 혹은 Lint는 소스 코드를 분석해 오류나 오타, 잠재적인 버그를 찾아주는 도구입니다.
javascript는 다른 언어들에 비해 유연한 문법 구조를 갖습니다. 이런 특징은 찾기 어려운 버그를 만들기도하고, 코드를 실행하기 전까지 알 수 없는 오류를 만들기도 합니다.
Lint를 사용하면 검증을 자동화하여 이런 문제를 예방할 수 있습니다. 가장 많이 사용되는 javascript 린터로는 ESLint와 코드 포맷터인 Prettier, css 린터인 Stylelint가 있습니다.
 ​
​
ESLint 2002년 JSON을 만든 더글라스 크락포드가 자바스크립트 린터인 JSLint를 만들었습니다.]]></description>
</item><item>
    <title>모델 학습 시 loss가 Nan으로 나올 때 해결법</title>
    <link>https://colinder.github.io/loss_nan_solution/</link>
    <pubDate>Thu, 17 Mar 2022 17:12:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/loss_nan_solution/</guid>
    <description><![CDATA[​
모델 학습 시 loss 값이 Nan으로 나올 때 해결 방법   if df == pandas.DataFrame() df.isnull().any()로 데이터셋에 NaN이나 inf 값이 들어있는지 확인한다.
  다른 optimizer들을 사용해본다. (ex. sgd, adam, nadam)
  다른 activation function을 사용해본다.
 사용하는 모델마다 적합한 activation function이 있습니다. 즉. 모델에 대하여 공부해야하고, 적합한 activation function을 찾아 학습해야 합니다.    learning rate(학습률)을 낮춰본다.
  learnin rate는 batch_size와 연관이 있습니다.
  러닝레이트 줄이기 vs 배치사이즈 키우기]]></description>
</item><item>
    <title>What is Babel?</title>
    <link>https://colinder.github.io/what_is_babel/</link>
    <pubDate>Tue, 15 Mar 2022 13:23:41 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/what_is_babel/</guid>
    <description><![CDATA[​
Babel이란?  Babel은 최신 명세(또는 ES2015 이상)의 문법을 구형 브라우저에서도 동작하는 코드로 *트랜스파일해주는 개발 도구입니다.
만약 Babel이 없다면? 구형 브라우저에서 동작할 수 있는 방식으로 웹 개발을 하고, 최신 브라우저에서 동작할 수 있는 방식으로 다시 개발해야 하는 상황이 발생합니다. 즉 구형 브라우저의 지원이 필요한 프런트엔드 프로젝트라면 현재 Babel의 사용은 필수입니다.
 ​
*트랜스파일러?
ES2015 등장 이후로 javascript는 class문법, 화살표 함수, 모듈 도입 등 많은 변화가 있었습니다. 이후에도 동기, 비동기처리를 위한 async &amp; await, optional 등 다양한 문법과 편의성 높은 기술들이 추가되고 있습니다.]]></description>
</item><item>
    <title>편향(Bias) &amp; 분산(Variance)</title>
    <link>https://colinder.github.io/biasvariance/</link>
    <pubDate>Mon, 14 Mar 2022 16:34:16 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/biasvariance/</guid>
    <description><![CDATA[​
편향(Bias)과 분산(Variance)  인공지능 모델링을 하면 정답을 맞추기 위해 컴퓨터는 여러 번의 예측값을 내놓는데, 컴퓨터가 내놓은 예측값의 동태를 묘사하는 표현이 &lsquo;편향&rsquo;과 &lsquo;분산&rsquo;입니다.
 ​
​
​
🤔결론부터 말하자면 예측값들과 정답이 대체로 멀리 떨어져 있으면 편향이 놓다고 말하고,
예측값들이 서로 멀리 흩어져 있으면 분산이 높다고 말합니다.
​
​
​
아래 그림을 보면 왼쪽 상단 과녁은
예측값들이 대체로 정답 근방에서 왔다갔다 합니다. &gt; 편향이 낮습니다.
예측값들끼리 서로 몰려 있습니다. &gt; 분산이 낮습니다.]]></description>
</item><item>
    <title>What is webpack?</title>
    <link>https://colinder.github.io/what_is_webpack/</link>
    <pubDate>Tue, 01 Mar 2022 09:17:44 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/what_is_webpack/</guid>
    <description><![CDATA[​
What is webpack?  오늘나 자바스크립트 개발에서 모듈을 사용하여 개발하는 것은 선택이 아닌 필수입니다. 하지만 아직 모든 브라우저(마이크로소프트 - 앳지, 네이버 - 웨일, 구글 - 크롬 등등)가 *ES2015 모듈을 지원하지 않기 때문에 모듈 단위로 패키지를 관리할 수 없습니다. 이런 경우 전역 스코프를 공유하기 때문에 변수명이 충돌하거나 값이 덮어씌워지는 등 문제가 발생할 수 있습니다.
이런 문제를 해결하기 위해 *번들러를 사용하는데 wabpack은 가장 많이 사용되는 번들러 중 하나입니다.
 *번들러
애플리케이션에 필요한 모든 종류의 파일들을 모듈 단위로 나누어 최소한의 파일 묶음(번들)으로 만들어 낸다.]]></description>
</item></channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title></title>
        <link>https://colinder.github.io/</link>
        <description>Hello New World</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 28 Jan 2021 22:51:52 &#43;0900</lastBuildDate>
            <atom:link href="https://colinder.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>BEAKJOON 18258, 2164, 11866, 1966</title>
    <link>https://colinder.github.io/bj_21.01.28/</link>
    <pubDate>Thu, 28 Jan 2021 22:51:52 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.28/</guid>
    <description><![CDATA[​
18258_큐 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  import sys from collections import deque # import time N = int(sys.stdin.readline().rstrip()) # start = time.time() # 시작 시간 저장 q = deque() for _ in range(N): command = sys.]]></description>
</item><item>
    <title>Python_Library</title>
    <link>https://colinder.github.io/python_library/</link>
    <pubDate>Thu, 28 Jan 2021 22:39:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/python_library/</guid>
    <description><![CDATA[​
Python Library   deque 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  # deque는 기본적으로 리스트를 변형(ex. pop() ...)하며 코딩할 때 # 속도가 빠르기 때문에 사용한다.  # 주로 popleft()를 사용하지만, 유용한 기능이 더 있다.  ## 1. rotate from collections import deque q = deque([1,2,3,4,5,6]) q.rotate(3) print(q)	# deque([4, 5, 6, 1, 2, 3]) # 주로 리스트의 끝이 붙어 있는 원순열 문제를 해결하는데 편리하다.]]></description>
</item><item>
    <title>BEAKJOON 4949, 10828, 1874, 17298</title>
    <link>https://colinder.github.io/bj_21.01.27/</link>
    <pubDate>Wed, 27 Jan 2021 22:41:03 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.27/</guid>
    <description><![CDATA[​
4949_균형잡힌 세상 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import sys while True: text = sys.stdin.readline().rstrip() if text == &#34;.&#34;: break stack =[] result = &#34;yes&#34; for i in text: if i.isalpha() or i == &#34; &#34;: continue elif i == &#34;(&#34; or i == &#34;[&#34;: stack.]]></description>
</item><item>
    <title>BEAKJOON 1037, 1934, 2609, 5086</title>
    <link>https://colinder.github.io/bj_21.01.26/</link>
    <pubDate>Tue, 26 Jan 2021 18:11:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.26/</guid>
    <description><![CDATA[​
1037_약수 1 2 3 4 5 6 7 8  import sys N = int(sys.stdin.readline().rstrip()) arr = list(map(int, sys.stdin.readline().split())) Max = max(arr) Min = min(arr) print(Max*Min)   ​
1934_최소공배수 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  import sys def GCD(a, b): while b != 0: m = a % b a = b b = m return a for T in range(int(sys.]]></description>
</item><item>
    <title>BEAKJOON 1931, 11399, 1541, 13305</title>
    <link>https://colinder.github.io/bj_21.01.25/</link>
    <pubDate>Mon, 25 Jan 2021 22:33:33 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.25/</guid>
    <description><![CDATA[​
1931_회의실 배정 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  import sys N = int(sys.stdin.readline().rstrip()) arr = [list(map(int, sys.stdin.readline().split())) for _ in range(N)] schedule = sorted(arr, key=lambda x: (x[1], x[0])) count, end = 0, 0 for s, f in schedule: if s &gt;= end: count += 1 end = f print(count) # 왠지 정렬을 잘하면 계산이 쉬울 것 같아서.]]></description>
</item><item>
    <title>SW Expert Academy_D4 1226, 1227, 1231, 5643</title>
    <link>https://colinder.github.io/sw_21.01.21/</link>
    <pubDate>Thu, 21 Jan 2021 22:32:25 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_21.01.21/</guid>
    <description><![CDATA[​
D4_1226_미로1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  dx = [0,1, 0, -1] dy = [1,0, -1, 0 ] def IsSafe(x, y): if 0&lt;= x &lt; 16 and 0 &lt;= y &lt; 16: return True def DFS(x, y): global result visited[x][y] = 1 if arr[x][y] == 3: result = 1 for i in range(4): nx = x + dx[i] ny = y + dy[i] if IsSafe(nx, ny) and visited[nx][ny] == 0 and arr[nx][ny] !]]></description>
</item><item>
    <title>SW Expert Academy_D4 1218, 1219, 1222, 1223</title>
    <link>https://colinder.github.io/sw_21.01.20/</link>
    <pubDate>Wed, 20 Jan 2021 21:50:49 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_21.01.20/</guid>
    <description><![CDATA[​
D4_1218_괄호 짝짓기 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  def Pair_bracket(): for i in range(L): if q[i] in check: ni = i - 1 while True: if q[ni] == 0: ni -= 1 else: break a = q[ni] b = check[q[i]] if a == b: q[i] = 0 q[ni] = 0 else: return 0 return 1 check = {&#34;)&#34; :&#34;(&#34;, &#34;]&#34;:&#34;[&#34;, &#34;}&#34;:&#34;{&#34;, &#34;&gt;&#34;:&#34;&lt;&#34;} for T in range(10): L = int(input()) q = list(input()) print(f&#39;#{T+1} {Pair_bracket()}&#39;)   ​]]></description>
</item><item>
    <title>BEAKJOON 1918, , , </title>
    <link>https://colinder.github.io/bj_21.01.20/</link>
    <pubDate>Wed, 20 Jan 2021 21:50:30 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.20/</guid>
    <description><![CDATA[​
1918_후위 표기식 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  import sys from collections import deque text = sys.stdin.readline().rstrip() # 후위 표기법 알고리즘 operator = {&#34;+&#34;:1, &#34;-&#34;:1, &#34;*&#34;:2 , &#34;/&#34;:2, &#34;(&#34;:0, &#34;)&#34;:0} stack = deque() result = &#34;&#34; for i in text: if i not in operator: result += i elif i == &#34;(&#34;: stack.]]></description>
</item><item>
    <title>SW Expert Academy_D4 6959, 4613, 6109, 1211</title>
    <link>https://colinder.github.io/sw_20.10.23/</link>
    <pubDate>Tue, 19 Jan 2021 21:19:33 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.10.23/</guid>
    <description><![CDATA[​
D4_6959_이상한 나라의 덧셈게임 1 2 3 4 5 6 7 8 9 10  for T in range(int(input())): N = input() result = [&#34;A&#34;, &#34;B&#34;] turn = 1 while len(N) &gt; 1: N = str(int(N[0]) + int(N[1])) + N[2:] turn += 1 print(f&#39;#{T+1} {result[turn%2]}&#39;) # 단순 산수   ​
D4_4613_러시아 국기 같은 깃발 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  for T in range(int(input())): N, M = map(int, input().]]></description>
</item><item>
    <title>BEAKJOON 2156, 2565, 10844, 9251</title>
    <link>https://colinder.github.io/bj_21.01.15/</link>
    <pubDate>Fri, 15 Jan 2021 17:11:07 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.15/</guid>
    <description><![CDATA[​
2156_포도주 시식 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  N = int(input()) wine = [0 for _ in range(N)] total = [0 for _ in range(N)] for i in range(N): wine[i] = int(input()) if N == 1: total[0] = wine[0] else: total[0] = wine[0] total[1] = wine[0] + wine[1] for i in range(2, N): total[i] = max(total[i-1], total[i-2] + wine[i], total[i-3] + wine[i] + wine[i-1]) print(total[N-1]) # N == 1인 경우를 생각하지 않았을 땐 런타임 오류에 걸렸었다.]]></description>
</item></channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title></title>
        <link>https://colinder.github.io/</link>
        <description>Hello New World</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 23 Feb 2022 14:32:36 &#43;0900</lastBuildDate>
            <atom:link href="https://colinder.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>localStorage vs sessionStorage</title>
    <link>https://colinder.github.io/localvssession_storage/</link>
    <pubDate>Wed, 23 Feb 2022 14:32:36 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/localvssession_storage/</guid>
    <description><![CDATA[​
Local Storage와 Session Storage의 차이 를 알아보기 전에
​
​
 &lsquo;Storage(web storage)&rsquo; 란 무엇인지 우선 알아봅시다.  HTML5에서 등장한 웹의 데이터를 클라이언트에 저장할 수 있는 기능
 인터넷상의 통신을 하는데 어떤 자료를 가지고 있어야 한다거나, 나의 정보(유저정보)를 관리하는 등의 데이터 관리를 위한 저장소 기능. 그리고 storage는 두 가지 종류가 존재
​
​
 Local Storage와 Session Storage   Local storage
origin(요청이 시작된 서버를 나타내는 URL)이 같을 경우, 여러 탭과 브라우저 창에서 공유되는 저장소.]]></description>
</item><item>
    <title>폴더안에 있는 특정 파일 리스트 가져오기</title>
    <link>https://colinder.github.io/filelistimport/</link>
    <pubDate>Tue, 22 Feb 2022 10:37:15 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/filelistimport/</guid>
    <description><![CDATA[​
폴더 안에 있는 특정 파일 리스트 정리  어떤 폴더 안에 있는 특정 확장자명의 파일들의 리스트를 정리하고 싶을 때 사용합니다.
 ​
1 2 3 4 5 6 7  ## 폴더안에 있는 .csv파일 리스트 가져오기 import os path = &#39;/경로/&#39; file_lists = os.listdir(path) file_list_result = [file for file in file_lists if file.endswith(&#39;.csv&#39;)] ## 파일명 끝이 .csv인 경우   ​
이후 pandas DataFrame에 넣을 때
1 2 3 4 5 6  import pandas as pd df = pd.]]></description>
</item><item>
    <title>Machine VS Deep Learning</title>
    <link>https://colinder.github.io/machine-deep/</link>
    <pubDate>Tue, 22 Feb 2022 09:43:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/machine-deep/</guid>
    <description><![CDATA[​
&lsquo;머신러닝&rsquo;이란 무엇인지 우선 알아봅시다.  머신 러닝(machine learning) 또는 기계 학습(機械學習)은 경험을 통해 자동으로 개선하는 컴퓨터 알고리즘 연구 분야입니다. 이는 인공지능의 한 분야로 간주되며, 컴퓨터가 학습할 수 있도록 하는 알고리즘과 기술을 개발합니다. 예를 들어 &lsquo;이 운동화가 진품이 맞는지?&rsquo;, &lsquo;특정 시간대에 A에서 B까지 가는데 얼마나 시간이 걸리는지?&rsquo;, &lsquo;수신한 메일이 스팸메일인지?&rsquo; 등 표현(representation)과 일반화(generalization)가 핵심인 기술입니다. 표현이란 데이터의 평가이며, 일반화란 아직 알 수 없는 데이터의 처리를 의미합니다.
 인공지능 ⊃ 머신러닝 ⊃ 딥러닝]]></description>
</item><item>
    <title>RNN &amp; LSTM</title>
    <link>https://colinder.github.io/rnn__lstm/</link>
    <pubDate>Mon, 21 Feb 2022 14:35:39 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/rnn__lstm/</guid>
    <description><![CDATA[​
RNN &amp; LSTM  감정분석을 위한 프로젝트를 기획하면서 RNN과 LSTM이라는 신경망 분석에 대하여 알게 되었습니다. 신경망 분석은 기계학습과 인지과학에서 영감을 얻어 설계된 통계학적 학습 알고리즘인데요. 이 둘의 개념를 알아보겠습니다.
 ​
​
RNN(Recurrent Neural Network) 순환 신경망  시퀀스(Sequence)라는 것이 있습니다.
시퀀스는 간단히 &lsquo;문맥이 있는 데이터&rsquo; 입니다. 문장은 단어들의 시퀀스, 음악은 음계들의 시퀀스, 동영상은 이미지의 시퀀스라고 할 수 있습니다. 그런데 시퀀스의 길이는 가변적입니다. 기존의 뉴럴 네트워크 알고리즘은 이미지처럼 고정된 크기의 입력을 다루는 데는 탁월하지만, 가변적인 크기의 데이터를 모델링하기에는 적합하지 않았습니다.]]></description>
</item><item>
    <title>typescript Refs_error</title>
    <link>https://colinder.github.io/refs_error/</link>
    <pubDate>Wed, 16 Feb 2022 14:35:56 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/refs_error/</guid>
    <description><![CDATA[​
vue typescript_$refs error    Object is possibly &lsquo;undefined&rsquo;
  Property &lsquo;value&rsquo; does not exist on type &lsquo;Vue | Element | (Vue | Element)[]&rsquo;. Property &lsquo;value&rsquo; does not exist on type &lsquo;Vue&rsquo;
   typescript를 적용한 vue에서 $refs 값을 가져와 사용하는데 위와 같은 문제가 발생했습니다.
​
에러가 나오는 이유 개발자가 보기에는 너무 당연히 데이터가 있지만, 객체가 비어 있을 수도 있는데 해당 객체의 내부 메소드를 사용하거나 내부 객체 키에 값을 넣어주려고 할 때 발생합니다.]]></description>
</item><item>
    <title>boxplot 해석 방법</title>
    <link>https://colinder.github.io/boxplot/</link>
    <pubDate>Thu, 23 Dec 2021 13:53:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/boxplot/</guid>
    <description><![CDATA[​
What is Boxplot?  데이터 분석을 진행하면서 다른 분들의 분석 레퍼런스를 보며 공부하다보니 많은 분들이 boxplot을 사용하는 것을 보았습니다. 다만, 저는 그 박스가 어떤 경우에 사용하는 것인지? 어떤 의미로 그려지는 것인지? 어떻게 해석하면 좋은지? 개념이 약했기 때문에 내용을 정리해보겠습니다.
 ​
Box Plot  최댓값, 최솟값, 중앙값, 사분편차를 사용하여 자료의 측정값들이 어떤 모양으로 분포되어 있으며, 극단값들은 어떠한지 등을 쉽게 알 수 있도록 하는 그림이다. 자료들이 비대칭으로 분포되어 있을 경우에는 상자그림을 그려 극단값의 개수, 비대칭 여부 등을 파악할 수 있으므로 측정값들의 중심위치와 산포도의 척도로 사용할 수 있다.]]></description>
</item><item>
    <title>Django_11_simple_JWT</title>
    <link>https://colinder.github.io/django_11_simple_jwt/</link>
    <pubDate>Wed, 22 Dec 2021 12:16:29 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/django_11_simple_jwt/</guid>
    <description><![CDATA[​
Django JWT(Json Web Token)  Django의 대표적인 jwt 패키지는 djangorestframework-jwt, djangorestframework-simplejwt가 있지만 전자는 업데이트가 더이상 진행되지 않아서 후자를 사용하는 것을 추천합니다.
 ​
djangorestframework-simplejwt  간단한 사용법 정리
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  def Usage(request): ## SIMPLEJWT METHOD TEST # print(&#34;================================&#34;) # a = JWTAuthentication() # b = a.]]></description>
</item><item>
    <title>Numpy &amp; Pandas</title>
    <link>https://colinder.github.io/numpy__pandas/</link>
    <pubDate>Wed, 15 Dec 2021 14:29:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/numpy__pandas/</guid>
    <description><![CDATA[​
Numpy  ML, AI 등 개발을 진행하다보면 무지성으로 import하는 library가 있다.
import numpy as np
python만 할 줄 안다면 어렵지 않게 사용이 가능하지만, 그래도 numpy의 개념을 알고 진행하고 싶은 마음에 내용을 정리해보자
 ​
What is Numpy(Numerical Python)?  공식문서를 따르면,
NumPy is the fundamental package for scientific computing in Python. It is a Python library that provides a multidimensional array object, various derived objects (such as masked arrays and matrices), and an assortment of routines for fast operations on arrays, including mathematical, logical, shape manipulation, sorting, selecting, I/O, discrete Fourier transforms, basic linear algebra, basic statistical operations, random simulation and much more.]]></description>
</item><item>
    <title>MariaDB 외부접속 허용</title>
    <link>https://colinder.github.io/mariadb_share/</link>
    <pubDate>Wed, 03 Nov 2021 11:19:43 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/mariadb_share/</guid>
    <description><![CDATA[​
MariaDB 외부 접속 허용  해당 MariaDB 공유는 root PC에서 진행하는 것이며, 외부에서 접속할 client는 별도로 설정할 건 없습니다.
또한 무조건 이 방법이 맞다!라기보다는 제가 이렇게 하니 외부 접속이 되었다. 는 경험의 기록입니다.
 ​
MySQL Client를 실행합니다.
​
실행하면 아래와 같은 초기 화면에 진입합니다.
​
MariaDB 설치를 진행하면서 등록한 password입력하면 아래와 같은 화면이 나옵니다.
​
초기 접속의 경우, DB table이 &lsquo;none&rsquo;으로 설정되어 있는데, **공유를 원하는 table로 설정을 바꿔줍니다. **]]></description>
</item><item>
    <title>Django_10_CustomAuthUser_AbstractUser</title>
    <link>https://colinder.github.io/django_10_customauthuser_abstractuser/</link>
    <pubDate>Fri, 08 Oct 2021 10:17:53 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/django_10_customauthuser_abstractuser/</guid>
    <description><![CDATA[​
Django AbstractUser  이전에 AbstractBaseUser를 사용한 커스텀 사용자 인증 테이블을 구성해보았습니다. 해당 내용에 이어서 AbstractUser로 커스텀 사용자 인증 테이블을 구성해보고 createsuperuser 명령어 입력시, 관리자 계정이 커스텀한 테이블에 생성되게 해보겠습니다.
 ​
AbstractUser을 상속받아 커스텀을 진행  우선 AbstractUser는 Django에서 기본으로 제공해주는 사용자 인증 테이블의 요소를 그대로 가져와 사용하기 때문에 그 요소들은 어떤 것들이 있는지 알아보자.
id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined 총 11개의 column이 존재하며 이외에 column을 추가 하고 싶을 때 코드를 추가로 작성합니다.]]></description>
</item></channel>
</rss>

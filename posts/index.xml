<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - </title>
        <link>https://colinder.github.io/posts/</link>
        <description>All Posts | </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 28 Mar 2021 20:42:45 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>03_SQLD_Ï†ú4 Ï†à Í¥ÄÍ≥Ñ &amp; Ï†ú5 Ï†à ÏãùÎ≥ÑÏûê</title>
    <link>https://colinder.github.io/03_sqld_%EC%A0%9C4-%EC%A0%88-%EA%B4%80%EA%B3%84-%EC%A0%9C5-%EC%A0%88-%EC%8B%9D%EB%B3%84%EC%9E%90/</link>
    <pubDate>Sun, 28 Mar 2021 20:42:45 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/03_sqld_%EC%A0%9C4-%EC%A0%88-%EA%B4%80%EA%B3%84-%EC%A0%9C5-%EC%A0%88-%EC%8B%9D%EB%B3%84%EC%9E%90/</guid>
    <description><![CDATA[‚Äã
# SQL  Ï†ú1 Ïû• Îç∞Ïù¥ÌÑ∞ Î™®Îç∏ÎßÅÏùò Ïù¥Ìï¥  Ï†ú4 Ï†à Í¥ÄÍ≥Ñ(Relationship)   Í¥ÄÍ≥ÑÏùò Í∞úÎÖê
  Í¥ÄÍ≥ÑÏùò Ï†ïÏùò
&ldquo;Ïù∏Ïä§ÌÑ¥Ïä§ ÏÇ¨Ïù¥Ïùò ÎÖºÎ¶¨Ï†ÅÏù∏ Ïó∞Í¥ÄÏÑ±ÏúºÎ°úÏÑú Ï°¥Ïû¨Ïùò ÌòïÌÉú or ÌñâÏúÑÎ°úÏÑú ÏÑúÎ°úÏóêÍ≤å Ïó∞Í¥ÄÏÑ±Ïù¥ Î∂ÄÏó¨Îêú ÏÉÅÌÉú&rdquo;
  Í¥ÄÍ≥ÑÏùò ÌéòÏñ¥ÎßÅ
&ldquo;Í¥ÄÍ≥ÑÎäî Ïù∏Ïä§ÌÑ¥Ïä§Í∞Ä Í∞úÎ≥ÑÏ†ÅÏúºÎ°ú Í¥ÄÍ≥ÑÎ•º Í∞ÄÏßÄÎäî Í≤É(ÌéòÏñ¥ÎßÅ)Ïù¥Í≥†, Ïù¥Í≤ÉÏùò ÏßëÌï©ÏùÑ Í¥ÄÍ≥ÑÎ°ú ÌëúÌòÑÌïòÎäî Í≤É&rdquo;
&ldquo;Îî∞ÎùºÏÑú Í∞úÎ≥Ñ Ïù∏Ïä§ÌÑ¥Ïä§Í∞Ä Í∞ÅÍ∞Å Îã§Î•∏ Ï¢ÖÎ•òÏùò Í¥ÄÍ≥ÑÎ•º Í∞ÄÏßÄÍ≥† ÏûàÎã§Î©¥, Îëê ÏóîÌÑ∞Ìã∞ ÏÇ¨Ïù¥Ïóê Îëê Í∞ú Ïù¥ÏÉÅÏùò Í¥ÄÍ≥ÑÍ∞Ä ÌòïÏÑ±Îê† Ïàò ÎèÑ ÏûàÎã§.&rdquo;
‚Äã
    Í¥ÄÍ≥ÑÏùò Î∂ÑÎ•ò]]></description>
</item><item>
    <title>Git_LFS</title>
    <link>https://colinder.github.io/git_lfslarge-file-storage/</link>
    <pubDate>Thu, 25 Mar 2021 22:28:20 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/git_lfslarge-file-storage/</guid>
    <description><![CDATA[‚Äã
Git LFS(Large File Storage) ÏÇ¨Ïö©Î≤ï  GitÏùÄ Í∞úÎãπ ÌååÏùºÏóê 100MBÏùò Ïö©Îüâ Ï†úÌïúÏù¥ Í±∏Î†§ ÏûàÎã§. (Ï†ÑÏ≤¥ Ïö©Îüâ Ï†úÌïúÏùÄ ÏóÜÎã§.) Îã§Îßå, ÌîÑÎ°úÏ†ùÌä∏Î•º ÌïòÎã§Î≥¥Î©¥ ÎåÄÏö©ÎüâÏùò ÏûêÎ£åÎÇò ÌååÏùºÏù¥ ÏÉùÍ∏∞Îäî Í≤ΩÏö∞Í∞Ä ÏûàÎã§. Ïù¥Îïå Ïö©Îüâ Ï†úÌïúÏùò Î¨∏Ï†úÎ•º Ìï¥ÏÜåÌï† Ïàò ÏûàÎäî Î∞©Î≤ïÏù¥ LFSÏù¥Îã§.
LFSÎäî Î≥ÑÎèÑÎ°ú ÏÑ§ÏπòÌïòÏó¨ ÏÇ¨Ïö©ÌïòÎ©¥ ÎêòÎ©∞, Î∞©Î≤ïÏùÑ Ï†ïÎ¶¨ÌïúÎã§.
  *Ï£ºÏÜå: https://git-lfs.github.com
‚Äã
  git LFSÏùÑ Îã§Ïö¥ÏùÑ Î∞õÍ≥† ÏÑ§Ïπò Ìï©ÎãàÎã§.
‚Äã
  git LFSÎ•º Ï†ÅÏö©Ìï† Ìè¥ÎçîÎ°ú Ïù¥ÎèôÌï¥ Îã§Ïùå Î™ÖÎ†πÏñ¥Î•º ÏûÖÎ†•Ìï©ÎãàÎã§.
1  $ git lfs install    ‚Äã]]></description>
</item><item>
    <title>02_SQLD_Ï†ú2 Ï†à ÏóîÌÑ∞Ìã∞ &amp; Ï†ú3 Ï†à ÏÜçÏÑ±</title>
    <link>https://colinder.github.io/02_sqld_%EC%A0%9C2-%EC%A0%88-%EC%97%94%ED%84%B0%ED%8B%B0-%EC%A0%9C3-%EC%A0%88-%EC%86%8D%EC%84%B1/</link>
    <pubDate>Thu, 25 Mar 2021 19:25:43 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/02_sqld_%EC%A0%9C2-%EC%A0%88-%EC%97%94%ED%84%B0%ED%8B%B0-%EC%A0%9C3-%EC%A0%88-%EC%86%8D%EC%84%B1/</guid>
    <description><![CDATA[‚Äã
# SQL  Ï†ú1 Ïû• Îç∞Ïù¥ÌÑ∞ Î™®Îç∏ÎßÅÏùò Ïù¥Ìï¥  Ï†ú2 Ï†à ÏóîÌÑ∞Ìã∞(Entity)   ÏóîÌÑ∞Ìã∞Ïùò Í∞úÎÖê
  Ïã§Ï≤¥, Í∞ùÏ≤¥ / Ïã§Î¨¥Ï†ÅÏúºÎ°†Îäî Ïï§ÌÑ∞Ìã∞ÎùºÍ≥† Î∂ÄÎ•∏Îã§. Ï¶â ÏóÖÎ¨¥Ïóê ÌïÑÏöîÌïòÍ≥† Ïú†Ïö©Ìïú Ï†ïÎ≥¥Î•º Ï†ÄÏû•ÌïòÍ≥† Í¥ÄÎ¶¨ÌïòÍ∏∞ ÏúÑÌïú ÏßëÌï©Ï†ÅÏù∏ Í≤É
‚Äã
    ÏóîÌÑ∞Ìã∞ÏôÄ Ïù∏Ïä§ÌÑ¥Ïä§Ïóê ÎåÄÌïú ÎÇ¥Ïö©Í≥º ÌëúÍ∏∞Î≤ï
‚Äã	
  ÏóîÌÑ∞Ìã∞Ïùò ÌäπÏßï
  Î∞òÎìúÏãú Ìï¥Îãπ ÏóÖÎ¨¥ÏóêÏÑú ÌïÑÏöîÌïòÍ≥† Í¥ÄÎ¶¨ÌïòÍ≥†Ïûê ÌïòÎäî Ï†ïÎ≥¥Ïó¨Ïïº ÌïúÎã§.
  Ïú†ÏùºÌïú ÏãùÎ≥ÑÏûêÏóê ÏùòÌï¥ ÏãùÎ≥ÑÏù¥ Í∞ÄÎä•Ìï¥Ïïº ÌïúÎã§.
  ÏòÅÏÜçÏ†ÅÏúºÎ°ú Ï°¥Ïû¨ÌïòÎäî Ïù∏Ïä§ÌÑ¥Ïä§Ïùò ÏßëÌï©Ïù¥Ïñ¥Ïïº ÌïúÎã§.]]></description>
</item><item>
    <title>SW Expert Academy_D3 11445, 11387, 11285, 11315</title>
    <link>https://colinder.github.io/sw_21.03.24/</link>
    <pubDate>Wed, 24 Mar 2021 18:34:58 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_21.03.24/</guid>
    <description><![CDATA[‚Äã
D3_11445_Î¨¥Ìïú ÏÇ¨Ï†Ñ 1 2 3 4 5 6 7 8 9 10 11 12  for T in range(int(input())): P = input().rstrip() Q = input().rstrip() if P + &#34;a&#34; != Q: result = &#34;Y&#34; else: result = &#34;N&#34; print(f&#39;#{T+1} {result}&#39;) # Ïôú D3 Ïù∏Í∞Ä.   ‚Äã
D3_11387_Î™¨Ïä§ÌÑ∞ ÏÇ¨ÎÉ• 1 2 3 4 5 6 7 8  for T in range(int(input())): D, L, N = map(int, input().split()) result = 0 for i in range(N): result += D * (1 + L*i/100) print(f&#39;#{T+1} {int(result)}&#39;)   ‚Äã]]></description>
</item><item>
    <title>01_SQLD_Ï†ú1 Ï†à Îç∞Ïù¥ÌÑ∞ Î™®Îç∏ÎßÅÏùò Ïù¥Ìï¥</title>
    <link>https://colinder.github.io/01_sqld_%EC%A0%9C1-%EC%9E%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A7%81%EC%9D%98-%EC%9D%B4%ED%95%B4/</link>
    <pubDate>Sun, 21 Mar 2021 23:06:59 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/01_sqld_%EC%A0%9C1-%EC%9E%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A7%81%EC%9D%98-%EC%9D%B4%ED%95%B4/</guid>
    <description><![CDATA[‚Äã
SQLDÎ•º Ï§ÄÎπÑÌïòÎ©¥ÏÑú Í≥µÎ∂ÄÌïú ÎÇ¥Ïö©ÏùÑ Ï†ïÎ¶¨.
‚Äã
# SQL  Ï†ú1 Ïû• Îç∞Ïù¥ÌÑ∞ Î™®Îç∏ÎßÅÏùò Ïù¥Ìï¥  Ï†ú1 Ï†à Îç∞Ïù¥ÌÑ∞ Î™®Îç∏ÎßÅÏùò Ïù¥Ìï¥   Î™®Îç∏ÎßÅÏùò Ïù¥Ìï¥
  Î™®Îç∏ÎßÅÏùò Ï†ïÏùò
 Î≥µÏû°Ìïú &ldquo;ÌòÑÏã§ÏÑ∏Í≥Ñ&quot;Î•º Îã®ÏàúÌôî(Ï∂îÏÉÅÌôî)ÏãúÏºú ÌëúÌòÑ ÏÇ¨Î¨º ÎòêÎäî ÏÇ¨Í±¥Ïóê Í¥ÄÌïú ÏñëÏÉÅ(Aspect)Ïù¥ÎÇò Í¥ÄÏ†ê(Perspective)ÏùÑ Î™ÖÌôïÌïòÍ≤å ÌïòÎäî Í≤É    ÌäπÏßï 3Í∞ÄÏßÄ
 Ï∂îÏÉÅÌôî - ÌòÑÏã§ÏÑ∏Í≥ÑÎ•º ÏùºÏ†ïÌïú ÌòïÏãùÏóê ÎßûÏ∂îÏñ¥ ÌëúÌòÑÌïòÎäî Í≤É Îã®ÏàúÌôî - Î≥µÏû°Ìïú ÌòÑÏã§ÏÑ∏Í≥ÑÎ•º ÏïΩÏÜçÎêú Í∑úÏïΩÏóê ÏùòÌï¥ ÏâΩÍ≤å Ïù¥Ìï¥Ìï† Ïàò ÏûàÍ≤å ÌëúÌòÑÌïòÎäî Í≤É Î™ÖÌôïÌôî - ÎàÑÍµ¨ÎÇò Ïù¥Ìï¥Ìï† Ïàò ÏûàÎèÑÎ°ù Î™ÖÌôïÌïòÍ≤å ÌëúÍ∏∞ÌïòÎäî Í≤É    Î™®Îç∏ÎßÅÏùò 3Í∞ÄÏßÄ Í¥ÄÏ†ê]]></description>
</item><item>
    <title>Python_Library</title>
    <link>https://colinder.github.io/python_library/</link>
    <pubDate>Mon, 08 Mar 2021 22:39:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/python_library/</guid>
    <description><![CDATA[‚Äã
Python Library üòÄ   Idea 1 2 3 4 5 6 7 8 9 10 11 12 13  # Î™®Îëê &#39;Í±∞Ïßì&#39;Ïù¥ Îì§Ïñ¥ÏûàÎäî Î¶¨Ïä§Ìä∏Îäî &#39;Í±∞Ïßì&#39;ÏúºÎ°ú Î≥º Ïàò ÏûàÏßÄ ÏïäÏùÑÍπå? # ÎùºÍ≥† ÏÉùÍ∞ÅÌï¥Î¥§Îã§.  a = [False, False, False] if a == False: print(&#34;Í±∞Ïßì&#34;) else: print(&#34;Ïò§Î•ò&#34;) # &gt;&gt;&gt; Ïò§Î•ò # ÏïàÎêúÎã§. ÏÉùÍ∞ÅÏùÑ ÎßêÏïÑÎùº..„Öé„Öé   ‚Äã
  raise ÏòàÏô∏(&lsquo;ÏóêÎü¨Î©îÏãúÏßÄ&rsquo;) 1 2 3 4 5 6 7 8 9 10 11 12  # pythonÏóêÏÑúÎäî ÏùòÎèÑÏ†ÅÏúºÎ°ú Ïò§Î•òÎ•º ÏùºÏúºÌÇ¨ Ïàò ÏûàÎäîÎç∞ # Ïù¥Î•º Ìï¥Ï£ºÎäî Í≤ÉÏù¥ raise Î©îÏÑúÎìú.]]></description>
</item><item>
    <title>BEAKJOON 2630, 1992</title>
    <link>https://colinder.github.io/bj_21.03.02/</link>
    <pubDate>Tue, 02 Mar 2021 21:03:23 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.03.02/</guid>
    <description><![CDATA[‚Äã
2630_ÏÉâÏ¢ÖÏù¥ ÎßåÎì§Í∏∞ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  import sys def DFS(x, y, N): global W, B color = arr[x][y] for cx in range(x, x+N): for cy in range(y, y+N): if arr[cx][cy] != color: DFS(x, y, N//2) DFS(x, N//2+y, N//2) DFS(N//2+x, y, N//2) DFS(N//2+x, N//2+y, N//2) return	# Ïù¥Í±∏ ÏïàÌï¥Ï£ºÎ©¥ Ïì∏Î™® ÏóÜÎäî DFSÏóê Îçî Îì§Ïñ¥Í∞ÄÍ≤å ÎêúÎã§.]]></description>
</item><item>
    <title>BEAKJOON 5052, 9372</title>
    <link>https://colinder.github.io/bj_21.02.25/</link>
    <pubDate>Thu, 25 Feb 2021 20:42:26 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.02.25/</guid>
    <description><![CDATA[‚Äã
5052_Ï†ÑÌôîÎ≤àÌò∏ Î™©Î°ù 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  import sys for T in range(int(sys.stdin.readline().rstrip())): N = int(sys.stdin.readline().rstrip()) Numbers = [] for _ in range(N): Numbers.append(sys.stdin.readline().rstrip()) Numbers.sort() result = &#34;YES&#34; for i in range(len(Numbers)-1): if Numbers[i+1].find(Numbers[i], 0, len(Numbers[i])) != -1: result = &#39;NO&#39; break print(result) # Ìù†.. Îã§Î•∏ ÏÇ¨ÎûåÎì§ÏùÄ Ìä∏Î¶¨Î°ú ÌíÄÏóàÎÇò..? # Ïù¥Í≤å Ïôú Ìä∏Î¶¨Ïóê ÏûàÏßÄ.]]></description>
</item><item>
    <title>BEAKJOON 1991, 11725, 1967, 1167</title>
    <link>https://colinder.github.io/bj_21.02.18/</link>
    <pubDate>Thu, 18 Feb 2021 21:24:02 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.02.18/</guid>
    <description><![CDATA[‚Äã
1991_Ìä∏Î¶¨ ÏàúÌöå 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  class Node: def __init__(self, data, L, R): self.data = data self.left = L self.right = R def preorder(node): # Ï†ÑÏúÑ ÏàúÌöå print(node.data, end=&#34;&#34;) if node.]]></description>
</item><item>
    <title>SW Expert Academy_D4 3143, 10966</title>
    <link>https://colinder.github.io/sw_21.02.16/</link>
    <pubDate>Tue, 16 Feb 2021 23:33:17 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_21.02.16/</guid>
    <description><![CDATA[‚Äã
D4_3143_Í∞ÄÏû• Îπ†Î•∏ Î¨∏ÏûêÏó¥ ÌÉÄÏù¥Ìïë 1 2 3 4 5 6 7  for T in range(int(input())): A, B = input().split() result = len(A) - (A.count(B)*(len(B)-1)) print(f&#39;#{T+1} {result}&#39;) # Ïôú D4 Ïù∏Í∞Ä.   ‚Äã
D4_10966_Î¨ºÎÜÄÏù¥Î•º Í∞ÄÏûê 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  from collections import deque dx = [0, 1, 0, -1] dy = [1, 0, -1, 0] for T in range(int(input())): N, M = map(int, input().]]></description>
</item></channel>
</rss>

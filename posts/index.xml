<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - </title>
        <link>https://colinder.github.io/posts/</link>
        <description>All Posts | </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 21 Mar 2021 23:06:59 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>01_SQL_basic</title>
    <link>https://colinder.github.io/01_sql_basic/</link>
    <pubDate>Sun, 21 Mar 2021 23:06:59 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/01_sql_basic/</guid>
    <description><![CDATA[​
SQLD를 준비하면서 공부한 내용을 정리.
​
# SQL  제1 장 데이터 모델링의 이해   모델링의 이해
  모델링의 정의
 복잡한 &ldquo;현실세계&quot;를 단순화(추상화)시켜 표현 사물 또는 사건에 관한 양상(Aspect)이나 관점(Perspective)을 명확하게 하는 것    특징 3가지
 추상화 - 현실세계를 일정한 형식에 맞추어 표현하는 것 단순화 - 복잡한 현실세계를 약속된 규약에 의해 쉽게 이해할 수 있게 표현하는 것 명확화 - 누구나 이해할 수 있도록 명확하게 표기하는 것    모델링의 3가지 관점]]></description>
</item><item>
    <title>Python_Library</title>
    <link>https://colinder.github.io/python_library/</link>
    <pubDate>Mon, 08 Mar 2021 22:39:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/python_library/</guid>
    <description><![CDATA[​
Python Library 😀   Idea 1 2 3 4 5 6 7 8 9 10 11 12 13  # 모두 &#39;거짓&#39;이 들어있는 리스트는 &#39;거짓&#39;으로 볼 수 있지 않을까? # 라고 생각해봤다.  a = [False, False, False] if a == False: print(&#34;거짓&#34;) else: print(&#34;오류&#34;) # &gt;&gt;&gt; 오류 # 안된다. 생각을 말아라..ㅎㅎ   ​
  raise 예외(&lsquo;에러메시지&rsquo;) 1 2 3 4 5 6 7 8 9 10 11 12  # python에서는 의도적으로 오류를 일으킬 수 있는데 # 이를 해주는 것이 raise 메서드.]]></description>
</item><item>
    <title>BEAKJOON 2630, 1992</title>
    <link>https://colinder.github.io/bj_21.03.02/</link>
    <pubDate>Tue, 02 Mar 2021 21:03:23 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.03.02/</guid>
    <description><![CDATA[​
2630_색종이 만들기 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  import sys def DFS(x, y, N): global W, B color = arr[x][y] for cx in range(x, x+N): for cy in range(y, y+N): if arr[cx][cy] != color: DFS(x, y, N//2) DFS(x, N//2+y, N//2) DFS(N//2+x, y, N//2) DFS(N//2+x, N//2+y, N//2) return	# 이걸 안해주면 쓸모 없는 DFS에 더 들어가게 된다.]]></description>
</item><item>
    <title>BEAKJOON 5052, 9372</title>
    <link>https://colinder.github.io/bj_21.02.25/</link>
    <pubDate>Thu, 25 Feb 2021 20:42:26 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.02.25/</guid>
    <description><![CDATA[​
5052_전화번호 목록 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  import sys for T in range(int(sys.stdin.readline().rstrip())): N = int(sys.stdin.readline().rstrip()) Numbers = [] for _ in range(N): Numbers.append(sys.stdin.readline().rstrip()) Numbers.sort() result = &#34;YES&#34; for i in range(len(Numbers)-1): if Numbers[i+1].find(Numbers[i], 0, len(Numbers[i])) != -1: result = &#39;NO&#39; break print(result) # 흠.. 다른 사람들은 트리로 풀었나..? # 이게 왜 트리에 있지.]]></description>
</item><item>
    <title>BEAKJOON 1991, 11725, 1967, 1167</title>
    <link>https://colinder.github.io/bj_21.02.18/</link>
    <pubDate>Thu, 18 Feb 2021 21:24:02 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.02.18/</guid>
    <description><![CDATA[​
1991_트리 순회 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  class Node: def __init__(self, data, L, R): self.data = data self.left = L self.right = R def preorder(node): # 전위 순회 print(node.data, end=&#34;&#34;) if node.]]></description>
</item><item>
    <title>SW Expert Academy_D4 3143</title>
    <link>https://colinder.github.io/sw_21.02.16/</link>
    <pubDate>Tue, 16 Feb 2021 23:33:17 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_21.02.16/</guid>
    <description><![CDATA[​
D4_3143_가장 빠른 문자열 타이핑 1 2 3 4 5 6 7  for T in range(int(input())): A, B = input().split() result = len(A) - (A.count(B)*(len(B)-1)) print(f&#39;#{T+1} {result}&#39;) # 왜 D4 인가.   ​]]></description>
</item><item>
    <title>BEAKJOON 15649, 15650</title>
    <link>https://colinder.github.io/bj_21.02.09/</link>
    <pubDate>Tue, 09 Feb 2021 17:59:18 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.02.09/</guid>
    <description><![CDATA[​
15649_N과 M (1) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  N, M = map(int, input().split()) def DFS(count): if count == M: print(*arr) return for i in range(N): if visited[i] == True: continue visited[i] = True arr.append(num_list[i]) DFS(count+1) arr.pop() visited[i] = False num_list = [i + 1 for i in range(N)] visited = [False] * N arr = [] DFS(0)   ​]]></description>
</item><item>
    <title>SW Expert Academy_D4 1258, 1249, 1238, 4261</title>
    <link>https://colinder.github.io/sw_21.02.02/</link>
    <pubDate>Tue, 02 Feb 2021 22:38:05 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_21.02.02/</guid>
    <description><![CDATA[​
D4_1258_행렬찾기 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  def check(x, y): dx, dy = 0, 0 while x + dx &lt; N and arr[x+dx][y]: dx += 1 while y + dy &lt; N and arr[x][y+dy]: dy += 1 result.append([dx*dy, dx, dy]) for i in range(x, x+dx): for j in range(y, y+dy): arr[i][j] = 0 for T in range(int(input())): N = int(input()) arr = [list(map(int, input().]]></description>
</item><item>
    <title>BEAKJOON 1021, 5430, 10866</title>
    <link>https://colinder.github.io/bj_21.01.31/</link>
    <pubDate>Sun, 31 Jan 2021 20:41:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.31/</guid>
    <description><![CDATA[​
1021_회전하는 큐 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  import sys from collections import deque N, M = map(int, sys.stdin.readline().split()) arr = deque([i for i in range(1, N+1)]) poplist = deque(list(map(int, sys.stdin.readline().split()))) count = 0 while poplist: try: if arr[0] == poplist[0]: arr.popleft() poplist.popleft() L = len(arr) a = abs(arr.]]></description>
</item><item>
    <title>BEAKJOON 18258, 2164, 11866, 1966</title>
    <link>https://colinder.github.io/bj_21.01.28/</link>
    <pubDate>Thu, 28 Jan 2021 22:51:52 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.28/</guid>
    <description><![CDATA[​
18258_큐 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  import sys from collections import deque # import time N = int(sys.stdin.readline().rstrip()) # start = time.time() # 시작 시간 저장 q = deque() for _ in range(N): command = sys.]]></description>
</item></channel>
</rss>

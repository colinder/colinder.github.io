<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>web - Tag - </title>
        <link>https://colinder.github.io/tags/web/</link>
        <description>web - Tag - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 23 Jun 2022 14:01:21 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/tags/web/" rel="self" type="application/rss+xml" /><item>
    <title>React-Native_icon_and_splash</title>
    <link>https://colinder.github.io/react-native_icon_and_splash/</link>
    <pubDate>Thu, 23 Jun 2022 14:01:21 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/react-native_icon_and_splash/</guid>
    <description><![CDATA[​
React-native (android)  icon 변경과 splash를 적용해보겠습니다.
 icon: 핸드폰에서 어플 접속시 보이는 모습을 의미.
splash: 어플 실행시 잠시 노출되는 화면을 의미.​
​
Icon 변경 방법  결론부터 정리하자면 특정 폴더안에 이미지만 넣으면 됩니다.
 ​
*프로젝트를 시작할 때 이름을 test로 만들어 진행하였습니다. (버전은 0.67)
1  npx react-native init test --version 0.67.0   ​
1. android/app/src/main/res 까지 폴더를 들어갑니다. 이미지와 같은 구조가 보인다면 잘 접근한 것입니다.]]></description>
</item><item>
    <title>Selenium 동작 대기 방법</title>
    <link>https://colinder.github.io/selenium_%EB%8F%99%EC%9E%91%EB%8C%80%EA%B8%B0/</link>
    <pubDate>Tue, 17 May 2022 15:50:42 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/selenium_%EB%8F%99%EC%9E%91%EB%8C%80%EA%B8%B0/</guid>
    <description><![CDATA[​
Selenium 동작대기 접근하려는 요소가 존재하지 않을 때 발생하는 NoSuchElementException error. 페이지와 서버가 통신중이거나 네트워크 지연 등으로 위의 크롤링을 원하는 요소가 html에 존재하기 전에 요소에 접근을 시도하기 때문에 발생하는 에러입니다.
어떤 멋진 코드로 이를 해결할 수 있을까? 고민하였지만 조금 무식한? 방법인 시간 지연으로 이를 해결하였습니다.
​
​
1. time.sleep  python 내장 library 지정한 시간만큼 지연 (프로세스 자체를 지정한 시간동안 기다림)  사용법 1 2 3  from time import sleep sleep(3) //3초간 기다림   ​]]></description>
</item><item>
    <title>what is Linter?</title>
    <link>https://colinder.github.io/what_is_linter/</link>
    <pubDate>Fri, 18 Mar 2022 13:28:48 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/what_is_linter/</guid>
    <description><![CDATA[​
Linter란?  Linter 혹은 Lint는 소스 코드를 분석해 오류나 오타, 잠재적인 버그를 찾아주는 도구입니다.
javascript는 다른 언어들에 비해 유연한 문법 구조를 갖습니다. 이런 특징은 찾기 어려운 버그를 만들기도하고, 코드를 실행하기 전까지 알 수 없는 오류를 만들기도 합니다.
Lint를 사용하면 검증을 자동화하여 이런 문제를 예방할 수 있습니다. 가장 많이 사용되는 javascript 린터로는 ESLint와 코드 포맷터인 Prettier, css 린터인 Stylelint가 있습니다.
 ​
​
ESLint 2002년 JSON을 만든 더글라스 크락포드가 자바스크립트 린터인 JSLint를 만들었습니다.]]></description>
</item><item>
    <title>What is Babel?</title>
    <link>https://colinder.github.io/what_is_babel/</link>
    <pubDate>Tue, 15 Mar 2022 13:23:41 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/what_is_babel/</guid>
    <description><![CDATA[​
Babel이란?  Babel은 최신 명세(또는 ES2015 이상)의 문법을 구형 브라우저에서도 동작하는 코드로 *트랜스파일해주는 개발 도구입니다.
만약 Babel이 없다면? 구형 브라우저에서 동작할 수 있는 방식으로 웹 개발을 하고, 최신 브라우저에서 동작할 수 있는 방식으로 다시 개발해야 하는 상황이 발생합니다. 즉 구형 브라우저의 지원이 필요한 프런트엔드 프로젝트라면 현재 Babel의 사용은 필수입니다.
 ​
*트랜스파일러?
ES2015 등장 이후로 javascript는 class문법, 화살표 함수, 모듈 도입 등 많은 변화가 있었습니다. 이후에도 동기, 비동기처리를 위한 async &amp; await, optional 등 다양한 문법과 편의성 높은 기술들이 추가되고 있습니다.]]></description>
</item><item>
    <title>What is webpack?</title>
    <link>https://colinder.github.io/what_is_webpack/</link>
    <pubDate>Tue, 01 Mar 2022 09:17:44 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/what_is_webpack/</guid>
    <description><![CDATA[​
What is webpack?  오늘나 자바스크립트 개발에서 모듈을 사용하여 개발하는 것은 선택이 아닌 필수입니다. 하지만 아직 모든 브라우저(마이크로소프트 - 앳지, 네이버 - 웨일, 구글 - 크롬 등등)가 *ES2015 모듈을 지원하지 않기 때문에 모듈 단위로 패키지를 관리할 수 없습니다. 이런 경우 전역 스코프를 공유하기 때문에 변수명이 충돌하거나 값이 덮어씌워지는 등 문제가 발생할 수 있습니다.
이런 문제를 해결하기 위해 *번들러를 사용하는데 wabpack은 가장 많이 사용되는 번들러 중 하나입니다.
 *번들러
애플리케이션에 필요한 모든 종류의 파일들을 모듈 단위로 나누어 최소한의 파일 묶음(번들)으로 만들어 낸다.]]></description>
</item><item>
    <title>What is ES2015?</title>
    <link>https://colinder.github.io/what_is_es2015/</link>
    <pubDate>Mon, 28 Feb 2022 09:23:51 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/what_is_es2015/</guid>
    <description><![CDATA[​
What is ES2015?  웹 개발 도구와 내용을 정리하다보면 등장하던 ES2015. 그냥 어떤 느낌의 단어인지 어렴풋이 알고만 있다가 확실하게 정리해 알아두고 싶어 내용을 정리합니다.
 ​
​
​
우선 javaScript에 대하여 조금 알아봅시다.  javaScript는 프로그래밍 언어입니다. 프로그래밍 언어는 지금도 꾸준히 개선되고 발전됩니다. 계속 변화하고 있기에 특정 시기에 개발된 상태를 1.2.1과 같이 버전으로 등록해 배포합니다. 자바스크립트는 결점이 상당히 많은 언어였고, 사용자들이 직접 결점을 보완하는 방법으로 발전되어 왔는데, **ECMA(European Computer Manufacturer&rsquo;s Association)**라는 단체에서 기존의 결점을 보완한 표준 자바스크립트 버전을 매년 발표하게 됩니다.]]></description>
</item><item>
    <title>What is Web Socket?</title>
    <link>https://colinder.github.io/what_is_web_socket/</link>
    <pubDate>Fri, 25 Feb 2022 12:20:35 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/what_is_web_socket/</guid>
    <description><![CDATA[​
What is Web Socket?  Web 통신은 무조건 두 단계를 걸쳐 동작합니다. 요청과 응답. 간단히 어떤 요청이 있을 때만 서버와 연결되어 어떤 응답을 하게 됩니다. 이러한 방식을 HTTP라고 합니다. 예를 들어, Naver.com에 접속하는 것은 &lsquo;Naver.com&rsquo;이라는 요청을 보낸 것이고 그에 대한 응답으로 naver의 메인 화면을 보여주는 것이죠. 그런데 만약 실시간 채팅 서비스나 푸시 알람을 구현해야 한다면, 매우 잦은 요청을 보내야 하고 네트워크 상 많은 부하를 발생시킬 수 있습니다.
 HTML5이라는 웹 표준이 생긴이래로 이러한 HTTP의 단점을 보완하기 위해 웹 소켓(Web Socket)이 등장했습니다.]]></description>
</item><item>
    <title>localStorage vs sessionStorage</title>
    <link>https://colinder.github.io/localvssession_storage/</link>
    <pubDate>Wed, 23 Feb 2022 14:32:36 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/localvssession_storage/</guid>
    <description><![CDATA[​
Local Storage와 Session Storage의 차이 를 알아보기 전에
​
​
 &lsquo;Storage(web storage)&lsquo;란 무엇인지 우선 알아봅시다.  HTML5에서 등장한 웹의 데이터를 클라이언트에 저장할 수 있는 기능
 인터넷상의 통신을 하는데 어떤 자료를 가지고 있어야 한다거나, 나의 정보(유저정보)를 관리하는 등의 데이터 관리를 위한 저장소 기능. 그리고 storage는 두 가지 종류가 존재
​
​
 Local Storage와 Session Storage   Local storage
origin(요청이 시작된 서버를 나타내는 URL)이 같을 경우, 여러 탭과 브라우저 창에서 공유되는 저장소.]]></description>
</item><item>
    <title>typescript Refs_error</title>
    <link>https://colinder.github.io/refs_error/</link>
    <pubDate>Wed, 16 Feb 2022 14:35:56 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/refs_error/</guid>
    <description><![CDATA[​
vue typescript_$refs error    Object is possibly &lsquo;undefined&rsquo;
  Property &lsquo;value&rsquo; does not exist on type &lsquo;Vue | Element | (Vue | Element)[]&rsquo;. Property &lsquo;value&rsquo; does not exist on type &lsquo;Vue&rsquo;
   typescript를 적용한 vue에서 $refs 값을 가져와 사용하는데 위와 같은 문제가 발생했습니다.
​
에러가 나오는 이유 개발자가 보기에는 너무 당연히 데이터가 있지만, 객체가 비어 있을 수도 있는데 해당 객체의 내부 메소드를 사용하거나 내부 객체 키에 값을 넣어주려고 할 때 발생합니다.]]></description>
</item><item>
    <title>Django vs Node.js 질문을 받았습니다.</title>
    <link>https://colinder.github.io/django-vs-node.js-%EC%A7%88%EB%AC%B8%EC%9D%84-%EB%B0%9B%EC%95%98%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
    <pubDate>Tue, 22 Jun 2021 17:22:50 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/django-vs-node.js-%EC%A7%88%EB%AC%B8%EC%9D%84-%EB%B0%9B%EC%95%98%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
    <description><![CDATA[​
🎈질문을 받았습니다.  저희는 이전에는 django로 풀스택 개발을 했어요. 개발자님은 django - vue.js로 개발을 하신다고 들었는데, vue는 javaScript 언어고 django는 Python 언어인데 둘이 뭔가 통신? 데이터를 주고 받고 하는 것에 있어서 문제는 없나요?
또 같은 javaScript 언어인 node.js 라는 것으로도 Backend 개발이 가능하다고 봤는데 node.js를 Backend로 개발하는 것이, 같은 javaScript로 개발하니까 더 효율적? 좋은거 아닌가요?
 ​
👨‍💻 하나는 명확히 답을 드릴 수 있는데, 하나는 모르겠네요. 알아보고 말씀드리겠습니다 . ​]]></description>
</item></channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>AI - Tag - </title>
        <link>https://colinder.github.io/tags/ai/</link>
        <description>AI - Tag - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 17 Mar 2022 17:12:00 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/tags/ai/" rel="self" type="application/rss+xml" /><item>
    <title>모델 학습 시 loss가 Nan으로 나올 때 해결법</title>
    <link>https://colinder.github.io/loss_nan_solution/</link>
    <pubDate>Thu, 17 Mar 2022 17:12:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/loss_nan_solution/</guid>
    <description><![CDATA[​
모델 학습 시 loss 값이 Nan으로 나올 때 해결 방법   if df == pandas.DataFrame() df.isnull().any()로 데이터셋에 NaN이나 inf 값이 들어있는지 확인한다.
  다른 optimizer들을 사용해본다. (ex. sgd, adam, nadam)
  다른 activation function을 사용해본다.
 사용하는 모델마다 적합한 activation function이 있습니다. 즉. 모델에 대하여 공부해야하고, 적합한 activation function을 찾아 학습해야 합니다.    learning rate(학습률)을 낮춰본다.
  learnin rate는 batch_size와 연관이 있습니다.
  러닝레이트 줄이기 vs 배치사이즈 키우기]]></description>
</item><item>
    <title>편향(Bias) &amp; 분산(Variance)</title>
    <link>https://colinder.github.io/biasvariance/</link>
    <pubDate>Mon, 14 Mar 2022 16:34:16 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/biasvariance/</guid>
    <description><![CDATA[​
편향(Bias)과 분산(Variance)  인공지능 모델링을 하면 정답을 맞추기 위해 컴퓨터는 여러 번의 예측값을 내놓는데, 컴퓨터가 내놓은 예측값의 동태를 묘사하는 표현이 &lsquo;편향&rsquo;과 &lsquo;분산&rsquo;입니다.
 ​
​
​
🤔결론부터 말하자면 예측값들과 정답이 대체로 멀리 떨어져 있으면 편향이 놓다고 말하고,
예측값들이 서로 멀리 흩어져 있으면 분산이 높다고 말합니다.
​
​
​
아래 그림을 보면 왼쪽 상단 과녁은
예측값들이 대체로 정답 근방에서 왔다갔다 합니다. &gt; 편향이 낮습니다.
예측값들끼리 서로 몰려 있습니다. &gt; 분산이 낮습니다.]]></description>
</item><item>
    <title>Activation_Function</title>
    <link>https://colinder.github.io/activation_function/</link>
    <pubDate>Thu, 24 Jun 2021 15:04:29 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/activation_function/</guid>
    <description><![CDATA[​
Activation Function(활성화 함수)  입력 신호의 총합을 출력신호로 변환하는 함수를 일반적으로 Activation Function이라고 합니다.
 ​
아직 잘 모르겠습니다. 하여 인공신경망에 빗대어 이해해보겠습니다.
인공 신경망은 인간의 중추신경계(뇌)속의 뉴런들이 정보를 전달하고 학습하여 결과를 도출해내는 과정을 모방한 학습알고리즘입니다.
여기서 의문점이 생깁니다.
  예를 들어 지나가다 귤을 보았는데 맛이 있을지 없을지 어떻게 알 수 있을까요? 저 귤의 데이터를 수집해 봅시다.
  타원형, 이쁜 노란색, 푸르른 꼭지 라는 데이터를 눈으로 보고 뇌속의 뉴런들이 이 정보를 분석해 맛있겠다.]]></description>
</item><item>
    <title>Collaborative filtering by auto Encoder</title>
    <link>https://colinder.github.io/collaborative_filtering_by_autoencoder/</link>
    <pubDate>Wed, 16 Jun 2021 15:02:22 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/collaborative_filtering_by_autoencoder/</guid>
    <description><![CDATA[​
Collaborative filtering by auto Encoder  협업필터링을 딥러닝 방식의 하나인 오토 인코더로 구현하는데 알아두어야 할 배경지식에 대하여 정리
 ​
Machine learning   기계가 명시적으로 코딩되지 않은 동작을 스스로 학습해 수행하게 하는 연구 분야. 인공지능(AI)의 한 분야로 간주된다. 기계 학습의 핵심은 표현(representation)과 일반화(generalization)에 있다. 표현이란 데이터의 평가이며, 일반화란 아직 알 수 없는 데이터에 대한 처리이다.
​
  What&rsquo;s the difference with &lsquo;Deep learning&rsquo;?   Machine learning은 어떤 문제와 답을 막 던져주면 기계가 계속 풀어내면서 추상적인 원리를 스스로 깨우치고 새로운 문제가 주어져도 스스로 답을 낼 수 있게 하는 것이다.]]></description>
</item></channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>algorithm - Tag - </title>
        <link>https://colinder.github.io/tags/algorithm/</link>
        <description>algorithm - Tag - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 21 Jan 2021 22:32:25 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/tags/algorithm/" rel="self" type="application/rss+xml" /><item>
    <title>SW Expert Academy_D4 1226, 1227, 1231, 5643</title>
    <link>https://colinder.github.io/sw_21.01.21/</link>
    <pubDate>Thu, 21 Jan 2021 22:32:25 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_21.01.21/</guid>
    <description><![CDATA[​
D4_1226_미로1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  dx = [0,1, 0, -1] dy = [1,0, -1, 0 ] def IsSafe(x, y): if 0&lt;= x &lt; 16 and 0 &lt;= y &lt; 16: return True def DFS(x, y): global result visited[x][y] = 1 if arr[x][y] == 3: result = 1 for i in range(4): nx = x + dx[i] ny = y + dy[i] if IsSafe(nx, ny) and visited[nx][ny] == 0 and arr[nx][ny] !]]></description>
</item><item>
    <title>SW Expert Academy_D4 1218, 1219, 1222, 1223</title>
    <link>https://colinder.github.io/sw_21.01.20/</link>
    <pubDate>Wed, 20 Jan 2021 21:50:49 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_21.01.20/</guid>
    <description><![CDATA[​
D4_1218_괄호 짝짓기 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  def Pair_bracket(): for i in range(L): if q[i] in check: ni = i - 1 while True: if q[ni] == 0: ni -= 1 else: break a = q[ni] b = check[q[i]] if a == b: q[i] = 0 q[ni] = 0 else: return 0 return 1 check = {&#34;)&#34; :&#34;(&#34;, &#34;]&#34;:&#34;[&#34;, &#34;}&#34;:&#34;{&#34;, &#34;&gt;&#34;:&#34;&lt;&#34;} for T in range(10): L = int(input()) q = list(input()) print(f&#39;#{T+1} {Pair_bracket()}&#39;)   ​]]></description>
</item><item>
    <title>BEAKJOON 1918, , , </title>
    <link>https://colinder.github.io/bj_21.01.20/</link>
    <pubDate>Wed, 20 Jan 2021 21:50:30 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.20/</guid>
    <description><![CDATA[​
1918_후위 표기식 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  import sys from collections import deque text = sys.stdin.readline().rstrip() # 후위 표기법 알고리즘 operator = {&#34;+&#34;:1, &#34;-&#34;:1, &#34;*&#34;:2 , &#34;/&#34;:2, &#34;(&#34;:0, &#34;)&#34;:0} stack = deque() result = &#34;&#34; for i in text: if i not in operator: result += i elif i == &#34;(&#34;: stack.]]></description>
</item><item>
    <title>SW Expert Academy_D4 6959, 4613, 6109, 1211</title>
    <link>https://colinder.github.io/sw_20.10.23/</link>
    <pubDate>Tue, 19 Jan 2021 21:19:33 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.10.23/</guid>
    <description><![CDATA[​
D4_6959_이상한 나라의 덧셈게임 1 2 3 4 5 6 7 8 9 10  for T in range(int(input())): N = input() result = [&#34;A&#34;, &#34;B&#34;] turn = 1 while len(N) &gt; 1: N = str(int(N[0]) + int(N[1])) + N[2:] turn += 1 print(f&#39;#{T+1} {result[turn%2]}&#39;) # 단순 산수   ​
D4_4613_러시아 국기 같은 깃발 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  for T in range(int(input())): N, M = map(int, input().]]></description>
</item><item>
    <title>BEAKJOON 2156, 2565, 10844, 9251</title>
    <link>https://colinder.github.io/bj_21.01.15/</link>
    <pubDate>Fri, 15 Jan 2021 17:11:07 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.15/</guid>
    <description><![CDATA[​
2156_포도주 시식 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  N = int(input()) wine = [0 for _ in range(N)] total = [0 for _ in range(N)] for i in range(N): wine[i] = int(input()) if N == 1: total[0] = wine[0] else: total[0] = wine[0] total[1] = wine[0] + wine[1] for i in range(2, N): total[i] = max(total[i-1], total[i-2] + wine[i], total[i-3] + wine[i] + wine[i-1]) print(total[N-1]) # N == 1인 경우를 생각하지 않았을 땐 런타임 오류에 걸렸었다.]]></description>
</item><item>
    <title>BEAKJOON 1912, 9184, 11053, 11054</title>
    <link>https://colinder.github.io/bj_21.01.14/</link>
    <pubDate>Thu, 14 Jan 2021 17:55:47 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.14/</guid>
    <description><![CDATA[​
1912_연속합 1 2 3 4 5 6 7 8 9 10 11 12  import sys N = int(sys.stdin.readline().rstrip()) arr = list(map(int, sys.stdin.readline().split())) result = [arr[0]] for i in range(N-1): result.append(max(result[i]+arr[i+1], arr[i+1])) print(max(result)) # dp 연습하기 좋은 문제   ​
9184_신나는 함수 실행 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  def w(a,b,c): if a &lt;= 0 or b &lt;= 0 or c &lt;= 0: return 1 if a &gt; 20 or b &gt; 20 or c &gt; 20: return w(20, 20, 20) if dp[a][b][c]: return dp[a][b][c] if a &lt; b and b &lt; c: dp[a][b][c] = w(a, b, c-1) + w(a, b-1, c-1) - w(a, b-1, c) return dp[a][b][c] dp[a][b][c] = w(a-1, b, c) + w(a-1, b-1, c) + w(a-1, b, c-1) - w(a-1, b-1, c-1) return dp[a][b][c] dp = [[[0]*21 for _ in range(21)] for _ in range(21)] while True: a, b, c = map(int, input().]]></description>
</item><item>
    <title>SW Expert Academy_D3 5678, 5672, 7465, 7701</title>
    <link>https://colinder.github.io/sw_21.01.06/</link>
    <pubDate>Wed, 06 Jan 2021 23:03:23 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_21.01.06/</guid>
    <description><![CDATA[​
D4_5678_[Professional] 팰린드롬 1 2 3 4 5 6 7 8 9 10 11 12  for T in range(int(input())): S = &#34; &#34; + input() L = len(S) result = 1 for i in range(2, L): for j in range(L-i): if S[j+1:j+i+1] == S[j+i:j:-1]: result = i print(f&#39;#{T+1} {result}&#39;) # 슬라이싱을 잘 고민 하면 쉽게 해결   ​
D4_5672_[Professional] 올해의 조련사 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  for T in range(int(input())): q = [] n = &#34;&#34; for N in range(int(input())): q.]]></description>
</item><item>
    <title>SW Expert Academy_D3 10761, 10804, 10912, 10965</title>
    <link>https://colinder.github.io/sw_21.01.04/</link>
    <pubDate>Mon, 04 Jan 2021 16:54:32 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_21.01.04/</guid>
    <description><![CDATA[​
D3_10761_신뢰 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  from collections import deque for T in range(int(input())): command = deque(input().split()) N = command.popleft() B = deque() O = deque() order = deque() while command: i = command.]]></description>
</item><item>
    <title>BEAKJOON 2178, 7576, 1697</title>
    <link>https://colinder.github.io/bj_20.12.29/</link>
    <pubDate>Tue, 29 Dec 2020 22:48:54 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.12.29/</guid>
    <description><![CDATA[​
2178_미로탐색 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  import sys from collections import deque def isSafe(x, y): if 0 &lt;= x &lt; N and 0 &lt;= y &lt; M: return True def BFS(): while q: x, y = q.popleft() visited[x][y] = 1 for i in range(4): cx = x + dx[i] cy = y + dy[i] if isSafe(cx, cy) and arr[cx][cy] == 1 and visited[cx][cy] == 0: q.]]></description>
</item><item>
    <title>BEAKJOON 1260, 2606, 2667, 1012</title>
    <link>https://colinder.github.io/bj_20.12.28/</link>
    <pubDate>Mon, 28 Dec 2020 23:01:27 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.12.28/</guid>
    <description><![CDATA[​
1260_DFS와 BFS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  import sys from collections import deque def DFS(V): print(V, end=&#39; &#39;) DFSv[V] = 1 for i in range(1, N+1): if DFSv[i] == 0 and tree[V][i] == 1: DFS(i) return def BFS(V): q = deque([V]) BFSv[V] = 1 while q: p = q.]]></description>
</item></channel>
</rss>

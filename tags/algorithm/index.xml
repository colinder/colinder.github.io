<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>algorithm - Tag - </title>
        <link>https://colinder.github.io/tags/algorithm/</link>
        <description>algorithm - Tag - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 23 Oct 2020 21:19:33 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/tags/algorithm/" rel="self" type="application/rss+xml" /><item>
    <title>SW Expert Academy_D4 6959, , , </title>
    <link>https://colinder.github.io/sw_20.10.23/</link>
    <pubDate>Fri, 23 Oct 2020 21:19:33 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.10.23/</guid>
    <description><![CDATA[​
D4_6959_이상한 나라의 덧셈게임 1 2 3 4 5 6 7 8 9 10  for T in range(int(input())): N = input() result = [&#34;A&#34;, &#34;B&#34;] turn = 1 while len(N) &gt; 1: N = str(int(N[0]) + int(N[1])) + N[2:] turn += 1 print(f&#39;#{T+1} {result[turn%2]}&#39;) # 단순 산수   ​]]></description>
</item><item>
    <title>SW Expert Academy_D3 3975, 5176, , </title>
    <link>https://colinder.github.io/sw_20.09.26/</link>
    <pubDate>Sat, 26 Sep 2020 00:07:40 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.26/</guid>
    <description><![CDATA[​
D3_3975_승률 비교하기 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  result = [] for T in range(int(input())): A, B, C, D = map(int, input().split()) if B/A &gt; D/C: result.append(&#34;BOB&#34;) elif B/A &lt; D/C: result.append(&#34;ALICE&#34;) else: result.append(&#34;DRAW&#34;) for t in range(T+1): print(f&#34;#{t+1} {result[t]}&#34;) # 아니 이게 D3라고? 완전 난이도 설정 실수네. 했다가 런타임 오류 보고 # 왜 그런건지 알았다. # python은 결과를 모았다가 출력하는 게 더 빠르다.]]></description>
</item><item>
    <title>SW Expert Academy_D3 3307, 3304, 4371, 10726</title>
    <link>https://colinder.github.io/sw_20.09.21/</link>
    <pubDate>Mon, 21 Sep 2020 22:43:28 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.21/</guid>
    <description><![CDATA[​
D3_3307_최장 증가 부분 수열(LIS) 1 2 3 4 5 6 7 8 9 10 11 12 13 14  for T in range(int(input())): N = int(input()) arr = list(map(int, input().split())) dp= [1] * N for i in range(1, N): for j in range(i): if arr[j] &lt; arr[i]: dp[i]= max(dp[i], dp[j] + 1) print(f&#39;#{T+1} {max(dp)}&#39;) # dp는 쉬운듯 어렵고 어려운듯 쉽다... # LIS로 검색하면 도움이 되는 글이 많다.    ​]]></description>
</item><item>
    <title>SW Expert Academy_D3 3131, 3233, 1860, 4047</title>
    <link>https://colinder.github.io/sw_20.09.15/</link>
    <pubDate>Sat, 19 Sep 2020 22:52:51 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.15/</guid>
    <description><![CDATA[​
D3_3131_100만 이하의 모든 소수 1 2 3 4 5 6 7 8 9 10 11 12  a = [0, 0] + [1] * 1000000 for i in range(2, 1000000): if a[i] == 1: for j in range(2*i, 1000001, i): a[j] = 0 for i in range(2, 1000000): if a[i] == 1: print(i, end=&#34; &#34;) # 에라토스테네스의 체   ​
D3_3233_정삼각형 분할 놀이 1 2 3 4 5 6 7 8 9 10  for T in range(int(input())): A, B = map(int, input().]]></description>
</item><item>
    <title>Python_Library</title>
    <link>https://colinder.github.io/python_library/</link>
    <pubDate>Fri, 11 Sep 2020 22:39:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/python_library/</guid>
    <description><![CDATA[​
자주 쓰는 Python Library  자주 사용하게되는 파이썬 라이브러리를 정리한다.
 ​
  정규표현식  일대일 매칭되는 문자
 정규표현식 안에서, 바로 다음 절에서 설명하는 메타문자를 제외한 모든 문자 하나는 일반 문자열 하나와 매칭된다. 예를 들어, a는 a와 매칭되고, 가는 ‘가’와 매칭되는 식이다. 당연히 a가 ‘b’ 또는 ‘가’와 매칭되지는 않는다.
1 2 3 4 5 6 7 8 9 10 11 12 13  어떤 프로그래밍 언어의 정규표현식이든 메타문자(특수한 기능을 하는 문자)라는 것이 존재한다.]]></description>
</item><item>
    <title>SW Expert Academy_D3 4698, 1493, 10570, 3032</title>
    <link>https://colinder.github.io/sw_20.09.09/</link>
    <pubDate>Tue, 08 Sep 2020 23:13:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.09/</guid>
    <description><![CDATA[​
D3_4698_테네스의 특별한 소수 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  for T in range(int(input())): D, A, B = map(int, input().split()) D = str(D) a = [0, 0] + [1] * (B - 1) rootB = int(B**0.5)	👈 이 아이디어를 얻기까지 오랜시간이 걸렸다. for i in range(2, rootB+1):	👈 if a[i] == 1:	👈 for j in range(2*i, B+1, i):	👈 에라토스테네스의 체 를 활용 a[j] = 0	👈 result = [] for i in range(A, B+1): if a[i] == 1 and D in str(i): result.]]></description>
</item><item>
    <title>SW Expert Academy_D3 2817, 1491, 1229, 5515</title>
    <link>https://colinder.github.io/sw_20.09.05/</link>
    <pubDate>Sat, 05 Sep 2020 00:06:14 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.05/</guid>
    <description><![CDATA[​
D3_2817_부분 수열의 합 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  import itertools for T in range(int(input())): N, K = map(int, input().split()) # N: 갯수, K: 목표 합 Nums = list(map(int, input().split())) count = 0 for i in range(1, N+1): boxs = itertools.combinations(Nums, i) for box in boxs: if sum(box) == K: count += 1 print(count) # 하... 라이브러리 쓰자..   ​]]></description>
</item><item>
    <title>SW Expert Academy_D3 10505, 10200, 3376, 5642</title>
    <link>https://colinder.github.io/sw_20.09.04/</link>
    <pubDate>Fri, 04 Sep 2020 00:00:59 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.04/</guid>
    <description><![CDATA[​
D3_10505_소득 불균형 1 2 3 4 5 6 7 8 9  for T in range(int(input())): N = int(input()) dp = [0] * 100001 Max = 0 for i in list(map(int, input().split())): dp[i] += 1 Max += i print(f&#39;#{T+1} {sum(dp[:int(Max/N)+1])}&#39;)   ​
D3_10200_구독자 전쟁 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  for T in range(int(input())): N, A, B = map(int, input().]]></description>
</item><item>
    <title>BEAKJOON 10844, 2156, </title>
    <link>https://colinder.github.io/bj_20.08.25/</link>
    <pubDate>Tue, 25 Aug 2020 23:01:50 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.08.25/</guid>
    <description><![CDATA[​
10844_쉬운 계단 수 1    ​
2156_포도주 시식 1       포도주 6 10 13 8 8 1     넘버링 c1 c2 c3 c4 c5 c6    |경우의 수| c1| c1 + c2 | c1 + c2 | | | | | | | | c1 + C3 | | |]]></description>
</item><item>
    <title>BEAKJOON 1149, 1932, 2579, 1463</title>
    <link>https://colinder.github.io/bj_20.08.06/</link>
    <pubDate>Wed, 05 Aug 2020 22:11:35 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.08.06/</guid>
    <description><![CDATA[​
1149_RGB거리 1 2 3 4 5 6 7 8 9 10 11 12 13  N = int(input()) RGB = [list(map(int, input().split())) for _ in range(N)] for i in range(1, len(RGB)): RGB[i][0] = RGB[i][0] + min(RGB[i-1][1], RGB[i-1][2]) RGB[i][1] = RGB[i][1] + min(RGB[i-1][0], RGB[i-1][2]) RGB[i][2] = RGB[i][2] + min(RGB[i-1][0], RGB[i-1][1]) print(min(RGB[i][0], RGB[i][1], RGB[i][2])) # 2시간이 넘게 고민한 결과... # 문제 속 조건3 &#34;&#34;i(2 ≤ i ≤ N-1)번 집의 색은 i-1번, i+1번 집의 색과 같지 않아야 한다.]]></description>
</item></channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>AbstractBaseUser - Tag - </title>
        <link>https://colinder.github.io/tags/abstractbaseuser/</link>
        <description>AbstractBaseUser - Tag - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 08 Oct 2021 10:17:50 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/tags/abstractbaseuser/" rel="self" type="application/rss+xml" /><item>
    <title>Django_09_CustomAuthUser_AbstractBaseUser</title>
    <link>https://colinder.github.io/django_09_customauthuser_abstractbaseuser/</link>
    <pubDate>Fri, 08 Oct 2021 10:17:50 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/django_09_customauthuser_abstractbaseuser/</guid>
    <description><![CDATA[​
Django AbstractBaseUser  django는 기본적으로 username 과 password를 가지고 로그인합니다. 하지만 요즘에는 대부분의 웹사이트들이 email 과 password로 로그인(사용자를 인식 및 인증)을 합니다.
제가 진행할 것은 django의 사용자 인증 테이블을 AbstractBaseUser을 사용해 커스텀하고, createsuperuser 명령어 입력시, 관리자 계정이 커스텀한 테이블에 생성되게 하는 것입니다.
 ​
Django 공식문서에는 models.py에서 기본적인 사용자모델을 설정하고 이를 활용해 admin.py에서 관리자모델을 만드는 예제가 있어 이를 따라하며 약간의 수정을 더해 진행해보려 합니다.
​
먼저 AbstractBaseUser를 상속받아 커스텀을 진행  django의 예제에는 AbstractBaseUser라는 클래스를 상속받은 모델을 제작하는데, Abstract(추상적인)Base(기초)User(사용자)의 틀을 가져와 이를 활용해 내 입맛대로 커스텀 하는 과정.]]></description>
</item><item>
    <title>Django_08_AbstractBaseUser VS AbstractUser</title>
    <link>https://colinder.github.io/django_08_abstractbaseuservsabstractuser/</link>
    <pubDate>Thu, 07 Oct 2021 10:17:20 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/django_08_abstractbaseuservsabstractuser/</guid>
    <description><![CDATA[​
Django AbstractBaseUser VS AbstractUser  Django로 프로젝트를 진행하면서 계정관련 내용을 등록하는 것을 가장 많이 했음에도, 아직 명확하게 차이를 알지 못하고 사용했던 것이 있었습니다.
바로! User custom에 관한 부분이었는데요. 크게 AbstractBaseUser와 AbstractUser를 사용하는 방법이 있는데 이 둘의 차이를 꼼꼼히 알아보기 위해 해당 포스팅이 작성되었습니다.
 ​
AbstractBaseUser VS AbstractUser  프로젝트 생성 후 accounts 라는 app을 만들고 makemigrations &amp; migrate를 하기 전
 ​
1. Model 설정 AbstractBaseUser
위치: accounts/models.py]]></description>
</item></channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>decorator - Tag - </title>
        <link>https://colinder.github.io/tags/decorator/</link>
        <description>decorator - Tag - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 31 Jan 2024 09:48:31 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/tags/decorator/" rel="self" type="application/rss+xml" /><item>
    <title>why use a decorator? And what&#39;s the benefit?</title>
    <link>https://colinder.github.io/decorator/</link>
    <pubDate>Wed, 31 Jan 2024 09:48:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/decorator/</guid>
    <description><![CDATA[​
데코레이터를 사용하는 이유와 장점 데코레이터는 코드에 메타데이터를 첨부하고, 이를 기반으로 코드를 변형하거나 행동을 추가하는 강력한 도구입니다.
​
여러 이유로 데코레이터를 사용할 수 있지만 주된 이점은 다음과 같습니다:
  메타프로그래밍(Metaprogramming): 데코레이터를 사용하면 코드에 대한 정보를 주석(annotation)으로 첨부할 수 있습니다. 이 메타데이터를 기반으로 코드를 동적으로 변형하거나 특정 동작을 추가할 수 있습니다.
  가독성과 모듈성 향상: 데코레이터를 사용하면 코드를 더 읽기 쉽게 만들 수 있습니다. 특히 프레임워크나 라이브러리에서 자주 사용되는 패턴이나 행동을 명시적으로 표현할 수 있습니다.]]></description>
</item></channel>
</rss>

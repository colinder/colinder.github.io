<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>cookie - Tag - </title>
        <link>https://colinder.github.io/tags/cookie/</link>
        <description>cookie - Tag - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 19 Oct 2020 14:59:01 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/tags/cookie/" rel="self" type="application/rss+xml" /><item>
    <title>what is Cookie?</title>
    <link>https://colinder.github.io/what_is_cookie/</link>
    <pubDate>Mon, 19 Oct 2020 14:59:01 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/what_is_cookie/</guid>
    <description><![CDATA[​
개발을 하다보면, 유저의 로그인 기능을 고민하는 경우가 많습니다. 근데. 로그인 기능을 개발하다보면 꼭 마주치는 두 가지&hellip;
cookie와 session에 대하여 알아보겠습니다. 다만 그전에 cookie와 session이 생기게 된 배경에 대하여 같이 알아 보겠습니다.
​
HTTP 프로토콜의 특징 HTTP는 Connectionless(비연결성)하고, Stateless하다고 한다.
Connectionless란, 클라이언트가 행위를 통해 서비스를 제공받기 위해 서버에 request(요청)를 하면 서버는 클라이언트의 요청값에 따라 클라이언트에게 response(응답)하게 됩니다. 이렇게 한번의 request — response의 결과로 클라이언트는 어플리케이션이 제공하는 서비스를 받게되면서, 서로의 접속을 끊게 된다는 특성입니다.]]></description>
</item></channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>SW Expert Academy - Category - </title>
        <link>https://colinder.github.io/categories/sw-expert-academy/</link>
        <description>SW Expert Academy - Category - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 04 Jan 2021 16:54:32 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/categories/sw-expert-academy/" rel="self" type="application/rss+xml" /><item>
    <title>SW Expert Academy_D3 10761, 10804, 10912, 10965</title>
    <link>https://colinder.github.io/sw_21.01.04/</link>
    <pubDate>Mon, 04 Jan 2021 16:54:32 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_21.01.04/</guid>
    <description><![CDATA[​
D3_10761_신뢰 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  from collections import deque for T in range(int(input())): command = deque(input().split()) N = command.popleft() B = deque() O = deque() order = deque() while command: i = command.]]></description>
</item><item>
    <title>SW Expert Academy_D4 6959, , , </title>
    <link>https://colinder.github.io/sw_20.10.23/</link>
    <pubDate>Fri, 23 Oct 2020 21:19:33 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.10.23/</guid>
    <description><![CDATA[​
D4_6959_이상한 나라의 덧셈게임 1 2 3 4 5 6 7 8 9 10  for T in range(int(input())): N = input() result = [&#34;A&#34;, &#34;B&#34;] turn = 1 while len(N) &gt; 1: N = str(int(N[0]) + int(N[1])) + N[2:] turn += 1 print(f&#39;#{T+1} {result[turn%2]}&#39;) # 단순 산수   ​]]></description>
</item><item>
    <title>SW Expert Academy_D3 3975, 5176, , </title>
    <link>https://colinder.github.io/sw_20.09.26/</link>
    <pubDate>Sat, 26 Sep 2020 00:07:40 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.26/</guid>
    <description><![CDATA[​
D3_3975_승률 비교하기 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  result = [] for T in range(int(input())): A, B, C, D = map(int, input().split()) if B/A &gt; D/C: result.append(&#34;BOB&#34;) elif B/A &lt; D/C: result.append(&#34;ALICE&#34;) else: result.append(&#34;DRAW&#34;) for t in range(T+1): print(f&#34;#{t+1} {result[t]}&#34;) # 아니 이게 D3라고? 완전 난이도 설정 실수네. 했다가 런타임 오류 보고 # 왜 그런건지 알았다. # python은 결과를 모았다가 출력하는 게 더 빠르다.]]></description>
</item><item>
    <title>SW Expert Academy_D3 3307, 3304, 4371, 10726</title>
    <link>https://colinder.github.io/sw_20.09.21/</link>
    <pubDate>Mon, 21 Sep 2020 22:43:28 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.21/</guid>
    <description><![CDATA[​
D3_3307_최장 증가 부분 수열(LIS) 1 2 3 4 5 6 7 8 9 10 11 12 13 14  for T in range(int(input())): N = int(input()) arr = list(map(int, input().split())) dp= [1] * N for i in range(1, N): for j in range(i): if arr[j] &lt; arr[i]: dp[i]= max(dp[i], dp[j] + 1) print(f&#39;#{T+1} {max(dp)}&#39;) # dp는 쉬운듯 어렵고 어려운듯 쉽다... # LIS로 검색하면 도움이 되는 글이 많다.    ​]]></description>
</item><item>
    <title>SW Expert Academy_D3 3131, 3233, 1860, 4047</title>
    <link>https://colinder.github.io/sw_20.09.15/</link>
    <pubDate>Sat, 19 Sep 2020 22:52:51 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.15/</guid>
    <description><![CDATA[​
D3_3131_100만 이하의 모든 소수 1 2 3 4 5 6 7 8 9 10 11 12  a = [0, 0] + [1] * 1000000 for i in range(2, 1000000): if a[i] == 1: for j in range(2*i, 1000001, i): a[j] = 0 for i in range(2, 1000000): if a[i] == 1: print(i, end=&#34; &#34;) # 에라토스테네스의 체   ​
D3_3233_정삼각형 분할 놀이 1 2 3 4 5 6 7 8 9 10  for T in range(int(input())): A, B = map(int, input().]]></description>
</item><item>
    <title>SW Expert Academy_D3 4698, 1493, 10570, 3032</title>
    <link>https://colinder.github.io/sw_20.09.09/</link>
    <pubDate>Tue, 08 Sep 2020 23:13:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.09/</guid>
    <description><![CDATA[​
D3_4698_테네스의 특별한 소수 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  for T in range(int(input())): D, A, B = map(int, input().split()) D = str(D) arr = [0, 0] + [1] * (B - 1) # 에라토스테네스의 체를 활용할껀데 어떤 수까지 검증하면 될까? # 검증해보니 모든 수는 자신의 int(root)까지만 확인하면 배수값인지 확인이 가능했다. rootB = int(B**0.5)	#👈 이 아이디어를 얻기까지 오랜시간이 걸렸다.]]></description>
</item><item>
    <title>SW Expert Academy_D3 2817, 1491, 1229, 5515</title>
    <link>https://colinder.github.io/sw_20.09.05/</link>
    <pubDate>Sat, 05 Sep 2020 00:06:14 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.05/</guid>
    <description><![CDATA[​
D3_2817_부분 수열의 합 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  import itertools for T in range(int(input())): N, K = map(int, input().split()) # N: 갯수, K: 목표 합 Nums = list(map(int, input().split())) count = 0 for i in range(1, N+1): boxs = itertools.combinations(Nums, i) for box in boxs: if sum(box) == K: count += 1 print(count) # 하... 라이브러리 쓰자..   ​]]></description>
</item><item>
    <title>SW Expert Academy_D3 10505, 10200, 3376, 5642</title>
    <link>https://colinder.github.io/sw_20.09.04/</link>
    <pubDate>Fri, 04 Sep 2020 00:00:59 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.09.04/</guid>
    <description><![CDATA[​
D3_10505_소득 불균형 1 2 3 4 5 6 7 8 9  for T in range(int(input())): N = int(input()) dp = [0] * 100001 Max = 0 for i in list(map(int, input().split())): dp[i] += 1 Max += i print(f&#39;#{T+1} {sum(dp[:int(Max/N)+1])}&#39;)   ​
D3_10200_구독자 전쟁 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  for T in range(int(input())): N, A, B = map(int, input().]]></description>
</item><item>
    <title>SW Expert Academy_D3 4466, 4406, 4371, 4299</title>
    <link>https://colinder.github.io/sw_20.07.29/</link>
    <pubDate>Wed, 29 Jul 2020 22:59:28 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.07.29/</guid>
    <description><![CDATA[​
D3_4466_최대 성적표 만들기 1 2 3 4 5 6 7 8 9 10 11  for T in range(int(input())): N, K = map(int, input().split()) score = list(map(int, input().split())) score.sort(reverse=True) result = 0 for i in range(K): result += score[i] print(&#39;#{} {}&#39;.format(T+1, result))   ​
D3_4406_모음이 보이지 않는 사람 1 2 3 4 5 6 7  for T in range(int(input())): sent = input() result = &#39;&#39; for i in sent: if i not in &#39;aeiou&#39;: result += i print(&#39;#{} {}&#39;.]]></description>
</item><item>
    <title>SW Expert Academy_D3 4676, 4615, 4579, 4522</title>
    <link>https://colinder.github.io/sw_20.07.10/</link>
    <pubDate>Fri, 10 Jul 2020 11:27:50 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/sw_20.07.10/</guid>
    <description><![CDATA[​
D3_4676_늘어지는 소리 만들기 1 2 3 4 5 6 7 8 9 10 11 12  for T in range(int(input())): sent = list(input()) # wow H = int(input()) po = sorted(list(map(int, input().split()))) # 2 3 2 for i in range(H): a = po[i]+i sent.insert(a,&#39;-&#39;) print(&#39;#{} {}&#39;.format(T+1, &#39;&#39;.join(sent))) # 단순 산수로 해결   ​
D3_4615_재미있는 오셀로 게임 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  dx = [0, 1, 1, 1, 0, -1, -1, -1] dy = [1, 1, 0, -1, -1, -1, 0, 1] def dfs(x, y, i ,stone): if board[x][y] == 0: return 0 elif board[x][y] == stone: return 1 else: if dfs(x+dx[i], y+dy[i], i, stone): board[x][y] = stone return 1 else: return 0 for T in range(int(input())): N, M = map(int, input().]]></description>
</item></channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>AES - Category - </title>
        <link>https://colinder.github.io/categories/aes/</link>
        <description>AES - Category - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 20 Feb 2023 17:04:26 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/categories/aes/" rel="self" type="application/rss+xml" /><item>
    <title>AES vue 적용</title>
    <link>https://colinder.github.io/aes_vue/</link>
    <pubDate>Mon, 20 Feb 2023 17:04:26 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/aes_vue/</guid>
    <description><![CDATA[​
​
AES Vue 적용  vue.js에 CryptoJS를 설치하여 진행
 1  npm i crypto-js    주의 사항  AES에 사용되는 parameters는 모두 bytes 타입만 사용이 가능하다. 하여 대부분 utf-8로 encoding하여 사용 (이 부분은 아직 정확하게 이해하지 못했다.)    ​
​
​
암호화(encryption) 1 2 3 4 5 6 7 8 9 10  var secretKey = &#39;abcdefghijklmnopqrstuvwxyzabcdef&#39;; var iv = &#39;1234567890123456&#39;; var data = this.]]></description>
</item><item>
    <title>what is AES</title>
    <link>https://colinder.github.io/what_is_aes/</link>
    <pubDate>Mon, 20 Feb 2023 16:48:04 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/what_is_aes/</guid>
    <description><![CDATA[​
​
​
AES 보안  보안 진단을 받아보니, 생각보다 API 통신은 해킹이 쉽다.
하여 보안에 신경써야 하는 경우, 기술들이 다양하게 있는데, 그 중 AES&lt;Advanced Encryption Standard&gt;를 간단히 알아보고 이후 적용하는 방법과 과정에 대하여 정리한다.
AES는 미국 표준 기술 연구소에 의해서 연방 정보 처리 표준으로 지정된 암호화 방식이며 NSA에 의해 1급 비밀에 사용할 수 있도록 승인된 암호화 알고리즘 중 유일하게 공개된 알고리즘 - 출처 : 나무위키
 ​
​
​]]></description>
</item></channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>dynamic type - Category - </title>
        <link>https://colinder.github.io/categories/dynamic-type/</link>
        <description>dynamic type - Category - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 03 Jan 2024 14:26:13 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/categories/dynamic-type/" rel="self" type="application/rss+xml" /><item>
    <title>what is 정적(static) &amp; 동적(dynamic) Type</title>
    <link>https://colinder.github.io/staticdynamictype/</link>
    <pubDate>Wed, 03 Jan 2024 14:26:13 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/staticdynamictype/</guid>
    <description><![CDATA[​
정의  정적 타입과 동적 타입은 프로그래밍 언어에서 변수나 값의 타입에 대한 접근 방식을 나타내는 두 가지 주요 패러다임.
 ​
​
정적 타입 (Static Typing):  타입 선언: 정적 타입 언어에서는 변수의 타입을 컴파일 시점에 명시적으로 선언합니다. 변수가 어떤 타입을 가질지 사전에 정의해야 합니다. 컴파일 시 타입 체크: 코드를 실행하기 전에 컴파일러가 변수의 타입을 검사합니다. 이로 인해 컴파일러는 타입과 일치하지 않는 연산이나 잘못된 타입의 변수 사용을 사전에 감지할 수 있습니다.]]></description>
</item></channel>
</rss>

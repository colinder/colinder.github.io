<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>BEAKJOON - Category - </title>
        <link>https://colinder.github.io/categories/beakjoon/</link>
        <description>BEAKJOON - Category - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 28 Dec 2020 23:01:27 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/categories/beakjoon/" rel="self" type="application/rss+xml" /><item>
    <title>BEAKJOON 1260, 2606, 2667, </title>
    <link>https://colinder.github.io/bj_20.12.28/</link>
    <pubDate>Mon, 28 Dec 2020 23:01:27 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.12.28/</guid>
    <description><![CDATA[​
1260_DFS와 BFS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  import sys from collections import deque def DFS(V): print(V, end=&#39; &#39;) DFSv[V] = 1 for i in range(1, N+1): if DFSv[i] == 0 and tree[V][i] == 1: DFS(i) return def BFS(V): q = deque([V]) BFSv[V] = 1 while q: p = q.]]></description>
</item><item>
    <title>BEAKJOON 10989, 11650, 2108, 10814</title>
    <link>https://colinder.github.io/bj_20.12.21/</link>
    <pubDate>Mon, 21 Dec 2020 21:44:59 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.12.21/</guid>
    <description><![CDATA[​
10989_수 정렬하기3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  import sys # 시간 초과 # from collections import deque # # result = deque() # for T in range(int(sys.stdin.readline().rstrip())): # n = int(sys.stdin.readline().rstrip()) # if len(result) != 0: # for i in range(len(result)): # if result[i] &gt; n: # result.]]></description>
</item><item>
    <title>BEAKJOON 2798, 7568, 1018, 1436</title>
    <link>https://colinder.github.io/bj_20.12.19/</link>
    <pubDate>Sat, 19 Dec 2020 21:20:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.12.19/</guid>
    <description><![CDATA[​
2798_블랙잭 1 2 3 4 5 6 7 8 9 10 11 12 13  import sys N, M = map(int, sys.stdin.readline().split()) cards = list(map(int, sys.stdin.readline().split())) result = 0 for i in range(N): for j in range(i+1, N): for x in range(j+1, N): if cards[i] + cards[j] + cards[x] &lt;= M: result = max(result, cards[i] + cards[j] + cards[x]) print(result)   ​
7568_덩치 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  import sys from collections import deque N = int(sys.]]></description>
</item><item>
    <title>BEAKJOON 10872, 10870, 2447, 11729</title>
    <link>https://colinder.github.io/bj_20.12.18/</link>
    <pubDate>Fri, 18 Dec 2020 21:16:23 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.12.18/</guid>
    <description><![CDATA[​
10872_팩토리얼 1 2 3 4 5 6 7 8 9 10 11  import sys N = int(sys.stdin.readline().rstrip()) def fac(n): if n &gt; 1: return n * fac(n-1) else: return 1 print(fac(N))   ​
10870_피보나치 수 5 1 2 3 4 5 6 7 8 9 10 11  import sys def fivo(n): if n &gt;= 2: return fivo(n-1) + fivo(n-2) else: return n N = int(sys.stdin.readline().rstrip()) print(fivo(N))   ​]]></description>
</item><item>
    <title>BEAKJOON 4948, 9020, 3053, 1002</title>
    <link>https://colinder.github.io/bj_20.12.17/</link>
    <pubDate>Thu, 17 Dec 2020 21:48:55 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.12.17/</guid>
    <description><![CDATA[​
4948_베르트랑 공준 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  import sys while True: N = int(sys.stdin.readline().rstrip()) if N == 0: break arr = [0,0] + [1] * ((2*N)-1) rootN = int((2*N)**0.5) for i in range(2, rootN+1): if arr[i] == 1: for j in range(2*i, 2*N+1, i): arr[j] = 0 print(sum(arr[N+1:(2*N)+1])) # 입출력에 제한이 있다가 0을 입력 받을 때 까지 # 출력을 해야 하는 조건을 달지 않는 것을 주의!]]></description>
</item><item>
    <title>BEAKJOON 10250, 2775, 2869, 1011</title>
    <link>https://colinder.github.io/bj_20.12.16/</link>
    <pubDate>Wed, 16 Dec 2020 23:45:42 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.12.16/</guid>
    <description><![CDATA[​
10250_ACM호텔 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  import sys for T in range(int(sys.stdin.readline().rstrip())): H, W, N = map(int, sys.stdin.readline().split()) quo = str((N // H) + 1) rem = str(N % H) if N % H == 0: quo = str(N//H) rem = str(H) print(rem+quo.zfill(2)) # zfill? # a = &#34;2&#34; # b = &#34;12&#34; # A = a.]]></description>
</item><item>
    <title>BEAKJOON 10809, 2941, 2908, 1316</title>
    <link>https://colinder.github.io/bj_20.12.15/</link>
    <pubDate>Tue, 15 Dec 2020 21:01:50 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.12.15/</guid>
    <description><![CDATA[​
10809_알파벳찾기 1 2 3 4 5 6 7 8 9 10  import sys word = sys.stdin.readline().rstrip() alphabet = list(range(97,123)) for x in alphabet : print(word.find(chr(x)), end=&#34; &#34;) # find함수는 조건에 맞는 값의 index를 출력하고 # 찾지 못하는 경우 -1을 출력한다.    ​
2941_크로아티아 알파벳 1 2 3 4 5 6 7 8 9 10  import sys cro = [&#34;c=&#34;, &#34;c-&#34;, &#34;dz=&#34;, &#34;d-&#34;, &#34;lj&#34;, &#34;nj&#34;, &#34;s=&#34;, &#34;z=&#34;] s = sys.]]></description>
</item><item>
    <title>BEAKJOON 1149, 1932, 2579, 1463</title>
    <link>https://colinder.github.io/bj_20.08.06/</link>
    <pubDate>Wed, 05 Aug 2020 22:11:35 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.08.06/</guid>
    <description><![CDATA[​
1149_RGB거리 1 2 3 4 5 6 7 8 9 10 11 12 13  N = int(input()) RGB = [list(map(int, input().split())) for _ in range(N)] for i in range(1, len(RGB)): RGB[i][0] = RGB[i][0] + min(RGB[i-1][1], RGB[i-1][2]) RGB[i][1] = RGB[i][1] + min(RGB[i-1][0], RGB[i-1][2]) RGB[i][2] = RGB[i][2] + min(RGB[i-1][0], RGB[i-1][1]) print(min(RGB[i][0], RGB[i][1], RGB[i][2])) # 2시간이 넘게 고민한 결과... # 문제 속 조건3 &#34;&#34;i(2 ≤ i ≤ N-1)번 집의 색은 i-1번, i+1번 집의 색과 같지 않아야 한다.]]></description>
</item><item>
    <title>BEAKJOON 1103, 1904, 2748, 9461</title>
    <link>https://colinder.github.io/bj_20.08.04/</link>
    <pubDate>Tue, 04 Aug 2020 22:12:11 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.08.04/</guid>
    <description><![CDATA[​
1003_피보나치 함수 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  def Fibonacci(N): if N &lt; 3: print(zero[N], one[N]) else: f = 1 s = 2 for i in range(N-2): zero.append(zero[f] + zero[s]) one.append(one[f] + one[s]) f += 1 s += 1 print(zero[N], one[N]) for T in range(int(input())): N = int(input()) zero = [1, 0, 1] one = [0, 1, 1] Fibonacci(N)   ​]]></description>
</item></channel>
</rss>

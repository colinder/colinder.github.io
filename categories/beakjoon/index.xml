<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>BEAKJOON - Category - </title>
        <link>https://colinder.github.io/categories/beakjoon/</link>
        <description>BEAKJOON - Category - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 09 Feb 2021 17:59:18 &#43;0900</lastBuildDate><atom:link href="https://colinder.github.io/categories/beakjoon/" rel="self" type="application/rss+xml" /><item>
    <title>BEAKJOON 15649, 15650</title>
    <link>https://colinder.github.io/bj_21.02.09/</link>
    <pubDate>Tue, 09 Feb 2021 17:59:18 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.02.09/</guid>
    <description><![CDATA[​
15649_N과 M (1) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  N, M = map(int, input().split()) def DFS(count): if count == M: print(*arr) return for i in range(N): if visited[i] == True: continue visited[i] = True arr.append(num_list[i]) DFS(count+1) arr.pop() visited[i] = False num_list = [i + 1 for i in range(N)] visited = [False] * N arr = [] DFS(0)   ​]]></description>
</item><item>
    <title>BEAKJOON 1021, 5430, 10866</title>
    <link>https://colinder.github.io/bj_21.01.31/</link>
    <pubDate>Sun, 31 Jan 2021 20:41:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.31/</guid>
    <description><![CDATA[​
1021_회전하는 큐 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  import sys from collections import deque N, M = map(int, sys.stdin.readline().split()) arr = deque([i for i in range(1, N+1)]) poplist = deque(list(map(int, sys.stdin.readline().split()))) count = 0 while poplist: try: if arr[0] == poplist[0]: arr.popleft() poplist.popleft() L = len(arr) a = abs(arr.]]></description>
</item><item>
    <title>BEAKJOON 18258, 2164, 11866, 1966</title>
    <link>https://colinder.github.io/bj_21.01.28/</link>
    <pubDate>Thu, 28 Jan 2021 22:51:52 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.28/</guid>
    <description><![CDATA[​
18258_큐 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  import sys from collections import deque # import time N = int(sys.stdin.readline().rstrip()) # start = time.time() # 시작 시간 저장 q = deque() for _ in range(N): command = sys.]]></description>
</item><item>
    <title>BEAKJOON 4949, 10828, 1874, 17298</title>
    <link>https://colinder.github.io/bj_21.01.27/</link>
    <pubDate>Wed, 27 Jan 2021 22:41:03 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.27/</guid>
    <description><![CDATA[​
4949_균형잡힌 세상 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import sys while True: text = sys.stdin.readline().rstrip() if text == &#34;.&#34;: break stack =[] result = &#34;yes&#34; for i in text: if i.isalpha() or i == &#34; &#34;: continue elif i == &#34;(&#34; or i == &#34;[&#34;: stack.]]></description>
</item><item>
    <title>BEAKJOON 1037, 1934, 2609, 5086</title>
    <link>https://colinder.github.io/bj_21.01.26/</link>
    <pubDate>Tue, 26 Jan 2021 18:11:31 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.26/</guid>
    <description><![CDATA[​
1037_약수 1 2 3 4 5 6 7 8  import sys N = int(sys.stdin.readline().rstrip()) arr = list(map(int, sys.stdin.readline().split())) Max = max(arr) Min = min(arr) print(Max*Min)   ​
1934_최소공배수 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  import sys def GCD(a, b): while b != 0: m = a % b a = b b = m return a for T in range(int(sys.]]></description>
</item><item>
    <title>BEAKJOON 1931, 11399, 1541, 13305</title>
    <link>https://colinder.github.io/bj_21.01.25/</link>
    <pubDate>Mon, 25 Jan 2021 22:33:33 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.25/</guid>
    <description><![CDATA[​
1931_회의실 배정 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  import sys N = int(sys.stdin.readline().rstrip()) arr = [list(map(int, sys.stdin.readline().split())) for _ in range(N)] schedule = sorted(arr, key=lambda x: (x[1], x[0])) count, end = 0, 0 for s, f in schedule: if s &gt;= end: count += 1 end = f print(count) # 왠지 정렬을 잘하면 계산이 쉬울 것 같아서.]]></description>
</item><item>
    <title>BEAKJOON 1918, , , </title>
    <link>https://colinder.github.io/bj_21.01.20/</link>
    <pubDate>Wed, 20 Jan 2021 21:50:30 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.20/</guid>
    <description><![CDATA[​
1918_후위 표기식 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  import sys from collections import deque text = sys.stdin.readline().rstrip() # 후위 표기법 알고리즘 operator = {&#34;+&#34;:1, &#34;-&#34;:1, &#34;*&#34;:2 , &#34;/&#34;:2, &#34;(&#34;:0, &#34;)&#34;:0} stack = deque() result = &#34;&#34; for i in text: if i not in operator: result += i elif i == &#34;(&#34;: stack.]]></description>
</item><item>
    <title>BEAKJOON 2156, 2565, 10844, 9251</title>
    <link>https://colinder.github.io/bj_21.01.15/</link>
    <pubDate>Fri, 15 Jan 2021 17:11:07 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.15/</guid>
    <description><![CDATA[​
2156_포도주 시식 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  N = int(input()) wine = [0 for _ in range(N)] total = [0 for _ in range(N)] for i in range(N): wine[i] = int(input()) if N == 1: total[0] = wine[0] else: total[0] = wine[0] total[1] = wine[0] + wine[1] for i in range(2, N): total[i] = max(total[i-1], total[i-2] + wine[i], total[i-3] + wine[i] + wine[i-1]) print(total[N-1]) # N == 1인 경우를 생각하지 않았을 땐 런타임 오류에 걸렸었다.]]></description>
</item><item>
    <title>BEAKJOON 1912, 9184, 11053, 11054</title>
    <link>https://colinder.github.io/bj_21.01.14/</link>
    <pubDate>Thu, 14 Jan 2021 17:55:47 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_21.01.14/</guid>
    <description><![CDATA[​
1912_연속합 1 2 3 4 5 6 7 8 9 10 11 12  import sys N = int(sys.stdin.readline().rstrip()) arr = list(map(int, sys.stdin.readline().split())) result = [arr[0]] for i in range(N-1): result.append(max(result[i]+arr[i+1], arr[i+1])) print(max(result)) # dp 연습하기 좋은 문제   ​
9184_신나는 함수 실행 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  def w(a,b,c): if a &lt;= 0 or b &lt;= 0 or c &lt;= 0: return 1 if a &gt; 20 or b &gt; 20 or c &gt; 20: return w(20, 20, 20) if dp[a][b][c]: return dp[a][b][c] if a &lt; b and b &lt; c: dp[a][b][c] = w(a, b, c-1) + w(a, b-1, c-1) - w(a, b-1, c) return dp[a][b][c] dp[a][b][c] = w(a-1, b, c) + w(a-1, b-1, c) + w(a-1, b, c-1) - w(a-1, b-1, c-1) return dp[a][b][c] dp = [[[0]*21 for _ in range(21)] for _ in range(21)] while True: a, b, c = map(int, input().]]></description>
</item><item>
    <title>BEAKJOON 2178, 7576, 1697</title>
    <link>https://colinder.github.io/bj_20.12.29/</link>
    <pubDate>Tue, 29 Dec 2020 22:48:54 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://colinder.github.io/bj_20.12.29/</guid>
    <description><![CDATA[​
2178_미로탐색 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  import sys from collections import deque def isSafe(x, y): if 0 &lt;= x &lt; N and 0 &lt;= y &lt; M: return True def BFS(): while q: x, y = q.popleft() visited[x][y] = 1 for i in range(4): cx = x + dx[i] cy = y + dy[i] if isSafe(cx, cy) and arr[cx][cy] == 1 and visited[cx][cy] == 0: q.]]></description>
</item></channel>
</rss>

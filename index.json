[{"categories":null,"content":"fsdfsdf dfsjljksdjfklsd sdfjlksj fjsljfdjl` fdjgkldjglk ","date":"2020-07-01","objectID":"/posts/django/test/:0:0","tags":null,"title":"Test","uri":"/posts/django/test/"},{"categories":["Hugo"],"content":"​ 블로그를 만들면서… 최초 기술블로그를 제작하면서 바닥부터 모든 것을 스스로 만들어 보기로 결심하고 제작을 시작하지만, 결코 쉽지 않았다. 개인적으로 꼭 원했던 기능이었던 tag기능과 categories를 구현하지 못하면서… 결국 기존에 있는 라이브러리들을 활용하기로 한다. ​ 가장 많은 사용자가 존재하는 jekyll로 시작한다. ​ ","date":"2020-06-29","objectID":"/posts/hugo/hugo_setting/:0:0","tags":["Hugo"],"title":"Hugo_setting stroy (feat.LoveTt 제작자)","uri":"/posts/hugo/hugo_setting/"},{"categories":["Hugo"],"content":"jekyll 기초 설정 Jekyll : Jekyll은 Ruby Gem으로 제공되며 템플릿과 템플릿의 구성요소, 인라인 코드, 마크다운과 같은 동적인 구성요소를 정적인 웹페이지로 만들어주는 파싱 엔진 ​ jekyll 서버 구동 방법 # 공식 홈페이지 설명 ~$ gem install bundler jekyll # jekyll 구동을 위한 프로그램 설치 ~$ jekyll new MYBLOG # MYBLOG 라는 이름의 블로그 폴더 \u0026 기초틀 생성 ~$ cd MYBLOG # MYBLOG 폴더로 이동 ~/MYBLOG $ bundle exec jekyll serve # MYBLOG 서버 구동 # 이후 명령창에 Servuer address : http://127.0.0.1:4000/ 로 인터넷 접속하면 jekell의 디폴트 서버 모습이 보인다. 이게 다다. ​ 포스팅을 하면서 이 내용을 정리할 때쯤. 알 수 없는 치명적인 오류로 인해 작성했던 .md파일과 git 서버가 폭파했다. 여러 방면으로 복구를 시도했지만, 모든 방법이 실패했고. 그리하여.. 난 jekyll을 떠나 Hugo로 이동하기로 했다. ​ ","date":"2020-06-29","objectID":"/posts/hugo/hugo_setting/:1:0","tags":["Hugo"],"title":"Hugo_setting stroy (feat.LoveTt 제작자)","uri":"/posts/hugo/hugo_setting/"},{"categories":["Hugo"],"content":"Hugo ","date":"2020-06-29","objectID":"/posts/hugo/hugo_setting/:2:0","tags":["Hugo"],"title":"Hugo_setting stroy (feat.LoveTt 제작자)","uri":"/posts/hugo/hugo_setting/"},{"categories":["Hugo"],"content":"Why Hugo? #1. window를 공식 지원한다. ( Jekyll은 window를 공식적으로 지원하진 않는다. ) → Hugo가 Jekyll 보다 window환경에서 안정적이지 않을까? #2. The world’s fastest framework for building websites → 빠르다. 👍 Hugo로 블로그를 구축한다면 이를 git의 서버를 통해 배포한다. ​ ","date":"2020-06-29","objectID":"/posts/hugo/hugo_setting/:2:1","tags":["Hugo"],"title":"Hugo_setting stroy (feat.LoveTt 제작자)","uri":"/posts/hugo/hugo_setting/"},{"categories":["Hugo"],"content":"Hugo로 github.io 블로그 만들기 ","date":"2020-06-29","objectID":"/posts/hugo/hugo_setting/:3:0","tags":["Hugo"],"title":"Hugo_setting stroy (feat.LoveTt 제작자)","uri":"/posts/hugo/hugo_setting/"},{"categories":["Hugo"],"content":"1. Git, Hugo 설치 Git 설치란? Git_bash설치를 뜻한다. 링크를 타고 들어가 적절한 버전을 선택해 설치를 진행한다. 👉 bash를 실행시키고 git --version을 입력해서 version 정보가 확인되면 정상 설치가 된 것이다. ​ Hugo 설치 (공식홈페이지의 Quick_Start 참고) 👉 난 Hugo_release에서 최신버전을 다운받아 직접 설치했다. C:\\Hugo\\bin\\에 압축을 해제. window + Q로 검색창을 연 뒤 변수를 검색해서 시스템 환경 변수 편집에 들어간다. 아래의 환경 변수(N)를 클릭. 위쪽 박스에서 Path를 더블클릭한다. 새로 만들기를 클릭 후, 아까 압축을 풀었던 곳인 C:\\Hugo\\bin를 등록. 닫고 배경화면에서 bash 실행 후 hugo version을 입력해서 version 정보가 나오면 잘 설치가 된 것. ","date":"2020-06-29","objectID":"/posts/hugo/hugo_setting/:3:1","tags":["Hugo"],"title":"Hugo_setting stroy (feat.LoveTt 제작자)","uri":"/posts/hugo/hugo_setting/"},{"categories":["Hugo"],"content":"2. Hugo 블로그 구축하기 프로젝트를 구축할 폴더(혹은 장소)에서 bash를 실행 hugo new site \u003c프로젝트 이름\u003e # ex) hugo new site MyBlog → MyBlog라는 프로젝트 폴더를 생성. 이때 생성된 폴더는 프로젝트폴더, root폴더, default폴더 등으로 불리며, 기본 구조는 이러하며, 먼저 테마를 설정해보자. 필자는 LoveIt 테마를 선택해 사용함. Theme는 다운 → 적용의 2단계를 거친다. ​ ​ 1. 다운 먼저 LoveIt 테마 Git홈페이지에 가 clone을 떠온다. 프로젝트폴더에서 bash를 실행 후 cd theme # theme 폴더로 이동 git clone https://github.com/dillonzq/LoveIt.git # LoveIt 테마 클론(다운) ​ ​ 2. 적용 프로젝트폴더속 config.toml파일을 열어 수정을 하여 적용하는데 적용 방법은 각 Theme의 git_site에 정리 되어 있다. LoveIt theme의 경우 아래와 같은 방법으로 설정하며 추가 버전이 release되어 있어 이를 적용하는 방법은 공식 문서를 읽어보며 custom한다. baseURL = \"http://example.org/\" # [en, zh-cn, fr, ...] determines default content language defaultContentLanguage = \"en\" # language code languageCode = \"en\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" ... ... ","date":"2020-06-29","objectID":"/posts/hugo/hugo_setting/:3:2","tags":["Hugo"],"title":"Hugo_setting stroy (feat.LoveTt 제작자)","uri":"/posts/hugo/hugo_setting/"},{"categories":["Django"],"content":"​ Django 개발환경준비 편리함을 추구하기 위해 AWS Cloud9을 사용하여 진행 https://ide.cs50.io/ 주소로 접속하면 진행이 가능하며, 진행을 위해선 Git 아이디가 있어야 한다. Git? : 버전 관리 시스템이며 Git은 소프트웨어를 개발하는 기업의 핵심 자산인 소스코드를 효과적으로 관리할 수 있게 해주는 무료, 공개소프트웨어. git에 대한 내용은 따로 정리해보도록 한다. 로그인까지 마치면 이제 Django 개발 준비 끝. ","date":"2020-06-25","objectID":"/posts/django/django_02/:0:0","tags":["Django"],"title":"Django_02_CRUD","uri":"/posts/django/django_02/"},{"categories":["SW Expert Academy"],"content":"​ ","date":"2020-06-25","objectID":"/posts/algorithm/sw_20.06.25/:0:0","tags":["algorithm"],"title":"SW Expert Academy_D3 5948, 5789, 5688, 5549","uri":"/posts/algorithm/sw_20.06.25/"},{"categories":["SW Expert Academy"],"content":"D3_5948_새샘이의 7-3-5 게임 for T in range(int(input())): N = list(map(int, input().split())) result = set() for i in range(5): for j in range(i+1, 6): for x in range(j+1, 7): result.add(N[i]+N[j]+N[x]) result = list(result) result.sort() print('#{} {}'.format(T+1, result[-5])) # 3수의 합을 정리하는데 set으로 중복을 제거하는 방법으로 result set을 정리 # set은 순서가 없기 때문에 result를 다시 list로 정리하고 .sort를 이용해 순서대로 나열 후 출력 ​ ","date":"2020-06-25","objectID":"/posts/algorithm/sw_20.06.25/:0:1","tags":["algorithm"],"title":"SW Expert Academy_D3 5948, 5789, 5688, 5549","uri":"/posts/algorithm/sw_20.06.25/"},{"categories":["SW Expert Academy"],"content":"D3_5789_현주의 상자 바꾸기 for T in range(int(input())): N, Q = map(int, input().split()) arr = ['0' for _ in range(N)] for i in range(1, Q+1): L, R = map(int, input().split()) for _ in range(L-1, R): arr[_] = str(i) print('#{} {}'.format(T+1, ' '.join(arr))) # arr이라는 0이 적힌 상자 리스트를 생성 # index L~R에 _의 숫자를 입력(출력하기 쉽게 str형태로 입력) # join을 써서 str형태의 list인자를 붙여서 출력 ​ ","date":"2020-06-25","objectID":"/posts/algorithm/sw_20.06.25/:0:2","tags":["algorithm"],"title":"SW Expert Academy_D3 5948, 5789, 5688, 5549","uri":"/posts/algorithm/sw_20.06.25/"},{"categories":["SW Expert Academy"],"content":"D3_5688_세제곱근을 찾아라 for T in range(int(input())): N = round(int(input())**(1/3), 2) print(\"#{} {}\".format(T+1, int(N) if int(N) == N else -1)) # 출력 방식에 조건을 넣어서 시도해봄 ​ ","date":"2020-06-25","objectID":"/posts/algorithm/sw_20.06.25/:0:3","tags":["algorithm"],"title":"SW Expert Academy_D3 5948, 5789, 5688, 5549","uri":"/posts/algorithm/sw_20.06.25/"},{"categories":["SW Expert Academy"],"content":"D3_5549_홀수일까 짝수일까 for T in range(int(input())): N = int(input()) print('#{} {}'.format(T+1, 'Even' if N%2 == 0 else 'Odd')) # 출력 방식에 조건을 넣어서 시도해봄 ","date":"2020-06-25","objectID":"/posts/algorithm/sw_20.06.25/:0:4","tags":["algorithm"],"title":"SW Expert Academy_D3 5948, 5789, 5688, 5549","uri":"/posts/algorithm/sw_20.06.25/"},{"categories":["Django"],"content":"​ Web ? 월드 와이드 웹(World Wide Web)이란 인터넷에 연결된 사용자들이 서로의 정보를 공유할 수 있는 공간을 의미하며, 줄여서 WWW나 W3라고도 부르며, 간단히 웹(Web)이라고 가장 많이 불린다. 인터넷과 같은 의미로 많이 사용되고 있지만, 정확히 말해 웹은 인터넷상의 인기 있는 하나의 서비스일 뿐. Web의 작동방식을 간단히 설명하자면, 요청과 응답. 사용자는 서버에 어떠한 요구사항을 요청하고 서버는 이에 따라 처리결과를 응답한다. 예를들어 사용자가 Login 버튼을 누른 행위는 user가 서버에 로그인 하고 싶다고 요청한 것이며, 서버는 로그인 창을 띄움으로서 user가 로그인할 수 있게 응답한 것입니다. ","date":"2020-06-23","objectID":"/posts/django/django_01/:0:0","tags":["Django"],"title":"Django_01_basic","uri":"/posts/django/django_01/"},{"categories":["Django"],"content":"web Protocal 요청에 대한 응답을 처리할 서버를 만드는 것이 Django ​ Django ? python 기반의 web framework ​ framework? : web 개발시 어려움을 줄이는데 목적이 있는 기능을 통칭 ​ ","date":"2020-06-23","objectID":"/posts/django/django_01/:1:0","tags":["Django"],"title":"Django_01_basic","uri":"/posts/django/django_01/"},{"categories":["Django"],"content":"Django의 개발 방식 (MTV) Django의 개발 방식은 MTV(Model, Template, View) 패턴을 따른다. Model: data를 구성 Template: 사용자(User)에서 보여주는 화면을 구성 (HTML로 구현) View: data 처리 및 전달 ​ ","date":"2020-06-23","objectID":"/posts/django/django_01/:2:0","tags":["Django"],"title":"Django_01_basic","uri":"/posts/django/django_01/"},{"categories":["Django"],"content":"Django_basic 장고는 하나의 프로젝트 단위로 web을 개발한다. 프로젝트 안에는 여러 app별로 기능을 나누어 구성한다. ​ ex) 회원들 계정을 관리하는 app (accounts) / 게시판을 관리하는 app (articles) 등등 요청은 Url로 접수하고 (ex. 게시판으로 이동하고 싶어 게시판 버튼을 클릭) 접수된 내용을 View에서 처리 (ex. 게시판버튼을 클릭하면 게시판 화면을 사용자에게 보여주게 구성) 처리한 화면을 Template로 꾸며(구성해) 사용자에게 응답 ","date":"2020-06-23","objectID":"/posts/django/django_01/:3:0","tags":["Django"],"title":"Django_01_basic","uri":"/posts/django/django_01/"},{"categories":["SW Expert Academy"],"content":"​ ","date":"2020-06-23","objectID":"/posts/algorithm/sw_20.06.23/:0:0","tags":["algorithm"],"title":"SW Expert Academy_D3 6190, 6057, 6019, 5986","uri":"/posts/algorithm/sw_20.06.23/"},{"categories":["SW Expert Academy"],"content":"D3_6190_정곤이의 단조 증가하는 수 for T in range(int(input())): N = int(input()) L = list(map(int, input().split())) result = -1 for i in range(N-1): for j in range(i+1, N): num = str(L[i]*L[j]) if len(num) \u003e 1 and '0' not in num and result \u003c int(num) and list(num) == sorted(num): result = int(num) print(f'#{T+1} {result}') # 단조증가하는 지를 검증하는 방법으로 sorted를 썼는데 이를 활용하기 위해서는 str형태로 변경해야 검증이 가능하다. # 한자리 숫자는 단조증가하는 수가 아니다. # 중간에 0이 있다면 볼 필요도 없이 단조증가수가 아니기 때문에 처리 속도 증가가 가능하다. ​ ","date":"2020-06-23","objectID":"/posts/algorithm/sw_20.06.23/:0:1","tags":["algorithm"],"title":"SW Expert Academy_D3 6190, 6057, 6019, 5986","uri":"/posts/algorithm/sw_20.06.23/"},{"categories":["SW Expert Academy"],"content":"D3_6057_그래프의 삼각형 for T in range(int(input())): N, M = map(int,input().split()) # N: 정점, M: 간선 arr = [[0]*(N+1) for n in range(N+1)] # part1 for _ in range(M): X, Y = map(int,input().split()) arr[X][Y] = 1 arr[Y][X] = 1 # part2 result = 0 for i in range(1, N+1): for j in range(i+1, N+1): if arr[i][j] == 1: for r in range(j+1, N+1): if arr[j][r] == 1 and arr[r][i] == 1: result += 1 print(f\"#{T+1} {result}\") # part1에서 삼각형의 정점의 정보를 담는 arr을 만들고 # part2에서 만들어진 배열을 돌며 정점의 정보를 발견(1)하면 해당 정점을 기준으로 삼각형이 되는지 검증 ​ ","date":"2020-06-23","objectID":"/posts/algorithm/sw_20.06.23/:0:2","tags":["algorithm"],"title":"SW Expert Academy_D3 6190, 6057, 6019, 5986","uri":"/posts/algorithm/sw_20.06.23/"},{"categories":["SW Expert Academy"],"content":"D3_6019_기차 사이의 파리 for T in range(int(input())): D, A, B, F = map(int,input().split()) t = D / (B+A) print('#{} {}'.format(T+1, F*t)) #단순 수학으로 해결 ​ ","date":"2020-06-23","objectID":"/posts/algorithm/sw_20.06.23/:0:3","tags":["algorithm"],"title":"SW Expert Academy_D3 6190, 6057, 6019, 5986","uri":"/posts/algorithm/sw_20.06.23/"},{"categories":["SW Expert Academy"],"content":"D3_5986_새샘이와 세 소수 for T in range(int(input())): N = int(input()) # part1 PN = set() for i in range(2, N+1): for j in range(2, i+1): if i % j == 0: break PN.add(j) PN =list(PN) pn = PN.sort(reverse=True) # part2 count = 0 for i in range(len(PN)): for j in range(i,len(PN)): for k in range(j,len(PN)): if N == PN[i]+PN[j]+PN[k]: count += 1 print('#{} {}'.format(T+1, count)) # part1에서 소수 리스트를 만들고(1과 자기 자신만을 약수로 가지는 수 리스트) # part2에서 세 소수의 합으로 나타낼 경우의 수를 종합. ","date":"2020-06-23","objectID":"/posts/algorithm/sw_20.06.23/:0:4","tags":["algorithm"],"title":"SW Expert Academy_D3 6190, 6057, 6019, 5986","uri":"/posts/algorithm/sw_20.06.23/"},{"categories":["SW Expert Academy"],"content":"​ ","date":"2020-06-20","objectID":"/posts/algorithm/sw_20.06.20/:0:0","tags":["algorithm"],"title":"SW Expert Academy_D3 9700, 7675, 6692, 6485","uri":"/posts/algorithm/sw_20.06.20/"},{"categories":["SW Expert Academy"],"content":"D3_9700_USB 꽂기의 미스터리 for T in range(int(input())): p, q = map(float, input().split()) s1 = (1-p)*q s2 = p*(1-q)*q if s1 \u003c s2: print(f'#{T+1} YES') else: print(f'#{T+1} NO') # 단순 수학을 통해 해결. ​ ","date":"2020-06-20","objectID":"/posts/algorithm/sw_20.06.20/:0:1","tags":["algorithm"],"title":"SW Expert Academy_D3 9700, 7675, 6692, 6485","uri":"/posts/algorithm/sw_20.06.20/"},{"categories":["SW Expert Academy"],"content":"D3_7675_통역사 성경이 for T in range(int(input())): N = int(input()) sent = input() sent = sent.replace('.', ' @').replace('!', ' @').replace('?', ' @').split() #print(sent) result = \"\" count = 0 for i in sent: if i.isalpha() and i == i.capitalize(): count += 1 if i == '@': result += str(count) + ' ' count = 0 print(\"#{} {}\".format(T+1, result)) # 주어지는 문장을 띄어쓰기를 기준으로 나누기 위해 .split()을 사용하고 # 문제에서 주어진 `이름`의 조건이 `첫 알파벳이 대문자이고 나머진 소문자`이기 때문에 # 문자로만 이루어져있는 것인지 .isalpha()로 검증 (VS .isdigit() 주어진 문자열이 숫자인지 검증) # `이름`의 조건이 맞는지 .capitalize()로 검증 # 추가 공부 내용 # upper - 주어진 문자열에서 모든 알파벳들을 대문자로 변환시킨다. # capitalize - 주어진 문자열에서 맨 첫 글자를 대문자로 변환하고 나머지는 소문자로 변환시킨다. # title - 주어진 문자열에서 알파벳 외의 문자(숫자, 특수기호, 띄어쓰기 등)로 나누어져 있는 영단어들의 첫 글자를 모두 대문자로 변환시킨다. # .isalpha()와 .capitalize()를 알고나면 간단해지는 문제. ​ ","date":"2020-06-20","objectID":"/posts/algorithm/sw_20.06.20/:0:2","tags":["algorithm"],"title":"SW Expert Academy_D3 9700, 7675, 6692, 6485","uri":"/posts/algorithm/sw_20.06.20/"},{"categories":["SW Expert Academy"],"content":"D3_6692_다솔이의 월급 상자 for T in range(int(input())): tc = int(input()) result = 0 for _ in range(tc): P, X = map(float, input().split()) result += P*X print(f'#{T+1} {result}') # input을 float형으로 받으면서 단순 수학을 사용해 해결 ​ ","date":"2020-06-20","objectID":"/posts/algorithm/sw_20.06.20/:0:3","tags":["algorithm"],"title":"SW Expert Academy_D3 9700, 7675, 6692, 6485","uri":"/posts/algorithm/sw_20.06.20/"},{"categories":["SW Expert Academy"],"content":"D3_6485_삼성시의 버스 노선 for T in range(int(input())): info = [0]*5001 for N in range(int(input())): st, la = map(int, input().split()) for x in range(st, la+1): info[x] +=1 station = [] for P in range(int(input())): station.append(str(info[int(input())])) print('#{} {}'.format(T+1, ' '.join(station))) # info로 정류장의 index를 기록(중복되는 위치를 표기하기 위해 +1 씩 진행) # P개의 버스 정류장을 확인하는데 저장되어있는 info의 정류장 정보를 가져와서 station리스트에 기록 # 주어진 문제에서 만약 범위?를 알려준다면 그만큼의 저장 리스트를 생성하는 것이 빠르다. # 예를 들어 info = [] 보다 info = [0]*5001 로 설정해 사용하는 것이 더 빠른 실행시간을 보여준다. ","date":"2020-06-20","objectID":"/posts/algorithm/sw_20.06.20/:0:4","tags":["algorithm"],"title":"SW Expert Academy_D3 9700, 7675, 6692, 6485","uri":"/posts/algorithm/sw_20.06.20/"}]